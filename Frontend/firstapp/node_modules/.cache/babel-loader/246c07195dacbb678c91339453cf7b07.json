{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pallavi\\\\Desktop\\\\React\\\\firstapp\\\\src\\\\components\\\\userboard\\\\OrderDetails.js\";\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\n// import axios from 'axios';\n\n// const CARD_ELEMENT_OPTIONS = {\n//   style: {\n//     base: {\n//       fontSize: '16px',\n//       color: '#32325d',\n//       '::placeholder': {\n//         color: '#a0aec0',\n//       },\n//     },\n//     invalid: {\n//       color: '#e53e3e',\n//     },\n//   },\n// };\n\n// const OrderDetails = () => {\n//   const { orderId } = useParams();\n//   const numericOrderId = Number(orderId);\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   const [payment, setPayment] = useState(null);\n//   const [clientSecret, setClientSecret] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [paymentStatus, setPaymentStatus] = useState('');\n//   const [error, setError] = useState('');\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     const fetchPaymentIntentAndDetails = async () => {\n//       try {\n//         const intentRes = await axios.post(\n//           'http://localhost:8080/api/payments/create-payment-intent',\n//           { orderId: numericOrderId },\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setClientSecret(intentRes.data.clientSecret);\n\n//         const paymentRes = await axios.get(\n//           `http://localhost:8080/api/payments/${orderId}`,\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setPayment(paymentRes.data);\n//         setLoading(false);\n//       } catch (err) {\n//         console.error('Error during payment setup:', err);\n//         setError(\n//           err.response?.status === 403\n//             ? 'You are not authorized to view this order.'\n//             : 'Something went wrong. Please try again later.'\n//         );\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPaymentIntentAndDetails();\n//   }, [orderId, token]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!stripe || !elements) return;\n\n//     const result = await stripe.confirmCardPayment(clientSecret, {\n//       payment_method: {\n//         card: elements.getElement(CardElement),\n//       },\n//     });\n\n//     if (result.error) {\n//       setError(result.error.message);\n//     } else {\n//       const status = result.paymentIntent.status;\n//       const mappedStatus =\n//         status === 'succeeded'\n//           ? 'COMPLETED'\n//           : status === 'processing'\n//           ? 'PENDING'\n//           : 'FAILED';\n\n//       try {\n//         await axios.post(\n//           'http://localhost:8080/api/payments/confirm',\n//           {\n//             transactionId: result.paymentIntent.id,\n//             status: mappedStatus,\n//           },\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setPaymentStatus(\n//           mappedStatus === 'COMPLETED'\n//             ? 'Payment successful!'\n//             : 'Payment submitted but not completed.'\n//         );\n//       } catch (err) {\n//         console.error('Error confirming payment:', err);\n//         setError('Failed to confirm payment to server.');\n//       }\n//     }\n//   };\n\n//   if (loading) return <p className=\"text-center text-white mt-10\">Loading...</p>;\n//   if (error) return <p className=\"text-center text-red-500 mt-10\">{error}</p>;\n\n//   return (\n//     <div\n//       className=\"flex justify-center items-center min-h-screen w-full px-4\"\n//       style={{\n//         padding: \"20px\",\n//         backgroundImage: `url(\"/artist.png\")`,\n//         backgroundSize: \"100% 100%\",\n//         backgroundRepeat: \"no-repeat\",\n//         backgroundPosition: \"center\",\n//         backgroundAttachment: \"fixed\",\n//         minHeight: \"100vh\",\n//         width: \"100vw\",\n//         overflowX: \"hidden\",\n//       }}\n//     >\n//       <div className=\"w-full max-w-md bg-black bg-opacity-70 rounded-2xl shadow-xl p-8\">\n//         <h2 style={{ color: 'white', fontSize: '24px', marginBottom: '20px' }}>Order Payment</h2>\n\n//         <div style={{ padding: '10px', marginBottom: '20px' }}>\n//           <p style={{ color: 'white' }}>\n//             <strong>Transaction ID:</strong> {payment.transactionId}\n//           </p>\n//           <p style={{ color: 'white' }}>\n//             <strong>Amount:</strong> â‚¹{payment.amount}\n//           </p>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"p-4 border border-gray-300 rounded-md mb-4 bg-white\">\n//             <CardElement options={CARD_ELEMENT_OPTIONS} />\n//           </div>\n\n//           <button\n//             type=\"submit\"\n//             disabled={!stripe || !elements}\n//             className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-200\"\n//           >\n//             Pay Now\n//           </button>\n//         </form>\n\n//         {paymentStatus && (\n//           <p className=\"mt-4 text-center text-green-400 font-semibold\">{paymentStatus}</p>\n//         )}\n\n//         {paymentStatus === 'Payment successful!' && payment?.downloadUrl && (\n//           <div style={{ marginTop: '24px', textAlign: 'center' }}>\n//           <a\n//             href={payment.downloadUrl}\n//             download\n//             style={{\n//               display: 'inline-block',\n//               backgroundColor: '#16a34a',\n//               color: '#fff',\n//               fontWeight: 'bold',\n//               padding: '10px 24px',\n//               borderRadius: '8px',\n//               textDecoration: 'none',\n//               transition: 'background-color 0.2s ease-in-out'\n//             }}\n\n//           >\n//             Download Artwork\n//           </a>\n//         </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderDetails;\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      fontSize: '16px',\n      color: '#32325d',\n      '::placeholder': {\n        color: '#a0aec0'\n      }\n    },\n    invalid: {\n      color: '#e53e3e'\n    }\n  }\n};\nconst OrderDetails = () => {\n  const {\n    orderId\n  } = useParams();\n  const numericOrderId = Number(orderId);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [payment, setPayment] = useState(null);\n  const [clientSecret, setClientSecret] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [paymentStatus, setPaymentStatus] = useState('');\n  const [error, setError] = useState('');\n  const [downloadUrl, setDownloadUrl] = useState('');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const fetchPaymentDetails = async () => {\n      try {\n        const intentRes = await axios.post('http://localhost:8080/api/payments/create-payment-intent', {\n          orderId: numericOrderId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setClientSecret(intentRes.data.clientSecret);\n        const paymentRes = await axios.get(`http://localhost:8080/api/payments/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const paymentData = paymentRes.data;\n        setPayment(paymentData);\n\n        // Prepare artwork download URL if available\n        if (paymentData.artworkId) {\n          setDownloadUrl(`http://localhost:8080/api/artworks/download/${paymentData.artworkId}`);\n        }\n        setLoading(false);\n      } catch (err) {\n        var _err$response;\n        console.error('Error fetching payment details:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 403 ? 'You are not authorized to view this order.' : 'Something went wrong. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchPaymentDetails();\n  }, [orderId, token, numericOrderId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) return;\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (result.error) {\n      setError(result.error.message);\n    } else {\n      const status = result.paymentIntent.status;\n      const mappedStatus = status === 'succeeded' ? 'COMPLETED' : status === 'processing' ? 'PENDING' : 'FAILED';\n      try {\n        const confirmRes = await axios.post('http://localhost:8080/api/payments/confirm', {\n          transactionId: result.paymentIntent.id,\n          status: mappedStatus\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPaymentStatus(mappedStatus === 'COMPLETED' ? 'Payment successful!' : 'Payment submitted but not completed.');\n\n        // Ensure artworkId is present to form download URL\n        if (mappedStatus === 'COMPLETED' && (payment === null || payment === void 0 ? void 0 : payment.artworkId)) {\n          setDownloadUrl(`http://localhost:8080/api/artworks/download/${payment.artworkId}`);\n        }\n      } catch (err) {\n        console.error('Error confirming payment:', err);\n        setError('Failed to confirm payment on the server.');\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20px',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20px',\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"20px\",\n      backgroundImage: `url(\"/artist.png\")`,\n      backgroundSize: \"100% 100%\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\",\n      backgroundAttachment: \"fixed\",\n      minHeight: \"100vh\",\n      width: \"100vw\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: '500px',\n      background: 'rgba(0, 0, 0, 0.75)',\n      padding: '30px',\n      borderRadius: '12px',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, \"Order Payment\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 14\n    }\n  }, \"Transaction ID:\"), \" \", payment === null || payment === void 0 ? void 0 : payment.transactionId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 14\n    }\n  }, \"Amount:\"), \" \\u20B9\", payment === null || payment === void 0 ? void 0 : payment.amount)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '12px',\n      border: '1px solid #ccc',\n      borderRadius: '8px',\n      marginBottom: '15px',\n      background: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    options: CARD_ELEMENT_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe || !elements,\n    style: {\n      width: '100%',\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '10px 16px',\n      border: 'none',\n      borderRadius: '6px',\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, \"Pay Now\")), paymentStatus && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: '20px',\n      textAlign: 'center',\n      color: 'lightgreen',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }, paymentStatus), paymentStatus === 'Payment successful!' && downloadUrl && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: downloadUrl,\n    download: true,\n    style: {\n      display: 'inline-block',\n      backgroundColor: '#28a745',\n      color: 'white',\n      padding: '10px 16px',\n      borderRadius: '6px',\n      textDecoration: 'none',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, \"Download Artwork\"))));\n};\nexport default OrderDetails;","map":{"version":3,"names":["React","useState","useEffect","useParams","useStripe","useElements","CardElement","axios","CARD_ELEMENT_OPTIONS","style","base","fontSize","color","invalid","OrderDetails","orderId","numericOrderId","Number","stripe","elements","payment","setPayment","clientSecret","setClientSecret","loading","setLoading","paymentStatus","setPaymentStatus","error","setError","downloadUrl","setDownloadUrl","token","localStorage","getItem","fetchPaymentDetails","intentRes","post","headers","Authorization","data","paymentRes","get","paymentData","artworkId","err","_err$response","console","response","status","handleSubmit","e","preventDefault","result","confirmCardPayment","payment_method","card","getElement","message","paymentIntent","mappedStatus","confirmRes","transactionId","id","createElement","textAlign","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","padding","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","backgroundAttachment","minHeight","width","display","justifyContent","alignItems","maxWidth","background","borderRadius","marginBottom","amount","onSubmit","border","options","type","disabled","backgroundColor","cursor","fontWeight","href","download","textDecoration"],"sources":["C:/Users/Pallavi/Desktop/React/firstapp/src/components/userboard/OrderDetails.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\n// import axios from 'axios';\r\n\r\n// const CARD_ELEMENT_OPTIONS = {\r\n//   style: {\r\n//     base: {\r\n//       fontSize: '16px',\r\n//       color: '#32325d',\r\n//       '::placeholder': {\r\n//         color: '#a0aec0',\r\n//       },\r\n//     },\r\n//     invalid: {\r\n//       color: '#e53e3e',\r\n//     },\r\n//   },\r\n// };\r\n\r\n// const OrderDetails = () => {\r\n//   const { orderId } = useParams();\r\n//   const numericOrderId = Number(orderId);\r\n//   const stripe = useStripe();\r\n//   const elements = useElements();\r\n\r\n//   const [payment, setPayment] = useState(null);\r\n//   const [clientSecret, setClientSecret] = useState('');\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [paymentStatus, setPaymentStatus] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     const fetchPaymentIntentAndDetails = async () => {\r\n//       try {\r\n//         const intentRes = await axios.post(\r\n//           'http://localhost:8080/api/payments/create-payment-intent',\r\n//           { orderId: numericOrderId },\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setClientSecret(intentRes.data.clientSecret);\r\n\r\n//         const paymentRes = await axios.get(\r\n//           `http://localhost:8080/api/payments/${orderId}`,\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setPayment(paymentRes.data);\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         console.error('Error during payment setup:', err);\r\n//         setError(\r\n//           err.response?.status === 403\r\n//             ? 'You are not authorized to view this order.'\r\n//             : 'Something went wrong. Please try again later.'\r\n//         );\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchPaymentIntentAndDetails();\r\n//   }, [orderId, token]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!stripe || !elements) return;\r\n\r\n//     const result = await stripe.confirmCardPayment(clientSecret, {\r\n//       payment_method: {\r\n//         card: elements.getElement(CardElement),\r\n//       },\r\n//     });\r\n\r\n//     if (result.error) {\r\n//       setError(result.error.message);\r\n//     } else {\r\n//       const status = result.paymentIntent.status;\r\n//       const mappedStatus =\r\n//         status === 'succeeded'\r\n//           ? 'COMPLETED'\r\n//           : status === 'processing'\r\n//           ? 'PENDING'\r\n//           : 'FAILED';\r\n\r\n//       try {\r\n//         await axios.post(\r\n//           'http://localhost:8080/api/payments/confirm',\r\n//           {\r\n//             transactionId: result.paymentIntent.id,\r\n//             status: mappedStatus,\r\n//           },\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setPaymentStatus(\r\n//           mappedStatus === 'COMPLETED'\r\n//             ? 'Payment successful!'\r\n//             : 'Payment submitted but not completed.'\r\n//         );\r\n//       } catch (err) {\r\n//         console.error('Error confirming payment:', err);\r\n//         setError('Failed to confirm payment to server.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p className=\"text-center text-white mt-10\">Loading...</p>;\r\n//   if (error) return <p className=\"text-center text-red-500 mt-10\">{error}</p>;\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"flex justify-center items-center min-h-screen w-full px-4\"\r\n//       style={{\r\n//         padding: \"20px\",\r\n//         backgroundImage: `url(\"/artist.png\")`,\r\n//         backgroundSize: \"100% 100%\",\r\n//         backgroundRepeat: \"no-repeat\",\r\n//         backgroundPosition: \"center\",\r\n//         backgroundAttachment: \"fixed\",\r\n//         minHeight: \"100vh\",\r\n//         width: \"100vw\",\r\n//         overflowX: \"hidden\",\r\n//       }}\r\n//     >\r\n//       <div className=\"w-full max-w-md bg-black bg-opacity-70 rounded-2xl shadow-xl p-8\">\r\n//         <h2 style={{ color: 'white', fontSize: '24px', marginBottom: '20px' }}>Order Payment</h2>\r\n  \r\n//         <div style={{ padding: '10px', marginBottom: '20px' }}>\r\n//           <p style={{ color: 'white' }}>\r\n//             <strong>Transaction ID:</strong> {payment.transactionId}\r\n//           </p>\r\n//           <p style={{ color: 'white' }}>\r\n//             <strong>Amount:</strong> â‚¹{payment.amount}\r\n//           </p>\r\n//         </div>\r\n  \r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"p-4 border border-gray-300 rounded-md mb-4 bg-white\">\r\n//             <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n//           </div>\r\n  \r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!stripe || !elements}\r\n//             className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-200\"\r\n//           >\r\n//             Pay Now\r\n//           </button>\r\n//         </form>\r\n  \r\n//         {paymentStatus && (\r\n//           <p className=\"mt-4 text-center text-green-400 font-semibold\">{paymentStatus}</p>\r\n//         )}\r\n  \r\n//         {paymentStatus === 'Payment successful!' && payment?.downloadUrl && (\r\n//           <div style={{ marginTop: '24px', textAlign: 'center' }}>\r\n//           <a\r\n//             href={payment.downloadUrl}\r\n//             download\r\n//             style={{\r\n//               display: 'inline-block',\r\n//               backgroundColor: '#16a34a',\r\n//               color: '#fff',\r\n//               fontWeight: 'bold',\r\n//               padding: '10px 24px',\r\n//               borderRadius: '8px',\r\n//               textDecoration: 'none',\r\n//               transition: 'background-color 0.2s ease-in-out'\r\n//             }}\r\n            \r\n//           >\r\n//             Download Artwork\r\n//           </a>\r\n//         </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OrderDetails;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      fontSize: '16px',\r\n      color: '#32325d',\r\n      '::placeholder': {\r\n        color: '#a0aec0',\r\n      },\r\n    },\r\n    invalid: {\r\n      color: '#e53e3e',\r\n    },\r\n  },\r\n};\r\n\r\nconst OrderDetails = () => {\r\n  const { orderId } = useParams();\r\n  const numericOrderId = Number(orderId);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [payment, setPayment] = useState(null);\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [paymentStatus, setPaymentStatus] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [downloadUrl, setDownloadUrl] = useState('');\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    const fetchPaymentDetails = async () => {\r\n      try {\r\n        const intentRes = await axios.post(\r\n          'http://localhost:8080/api/payments/create-payment-intent',\r\n          { orderId: numericOrderId },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        setClientSecret(intentRes.data.clientSecret);\r\n\r\n        const paymentRes = await axios.get(\r\n          `http://localhost:8080/api/payments/${orderId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        const paymentData = paymentRes.data;\r\n        setPayment(paymentData);\r\n\r\n        // Prepare artwork download URL if available\r\n        if (paymentData.artworkId) {\r\n          setDownloadUrl(`http://localhost:8080/api/artworks/download/${paymentData.artworkId}`);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching payment details:', err);\r\n        setError(\r\n          err.response?.status === 403\r\n            ? 'You are not authorized to view this order.'\r\n            : 'Something went wrong. Please try again.'\r\n        );\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPaymentDetails();\r\n  }, [orderId, token, numericOrderId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) return;\r\n\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      },\r\n    });\r\n\r\n    if (result.error) {\r\n      setError(result.error.message);\r\n    } else {\r\n      const status = result.paymentIntent.status;\r\n      const mappedStatus =\r\n        status === 'succeeded'\r\n          ? 'COMPLETED'\r\n          : status === 'processing'\r\n          ? 'PENDING'\r\n          : 'FAILED';\r\n\r\n      try {\r\n        const confirmRes = await axios.post(\r\n          'http://localhost:8080/api/payments/confirm',\r\n          {\r\n            transactionId: result.paymentIntent.id,\r\n            status: mappedStatus,\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        setPaymentStatus(\r\n          mappedStatus === 'COMPLETED'\r\n            ? 'Payment successful!'\r\n            : 'Payment submitted but not completed.'\r\n        );\r\n\r\n        // Ensure artworkId is present to form download URL\r\n        if (mappedStatus === 'COMPLETED' && payment?.artworkId) {\r\n          setDownloadUrl(`http://localhost:8080/api/artworks/download/${payment.artworkId}`);\r\n        }\r\n\r\n      } catch (err) {\r\n        console.error('Error confirming payment:', err);\r\n        setError('Failed to confirm payment on the server.');\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) return <p style={{ textAlign: 'center', marginTop: '20px', color: 'white' }}>Loading...</p>;\r\n  if (error) return <p style={{ textAlign: 'center', marginTop: '20px', color: 'red' }}>{error}</p>;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"20px\",\r\n        backgroundImage: `url(\"/artist.png\")`,\r\n        backgroundSize: \"100% 100%\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        backgroundAttachment: \"fixed\",\r\n        minHeight: \"100vh\",\r\n        width: \"100vw\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div style={{\r\n        width: '100%',\r\n        maxWidth: '500px',\r\n        background: 'rgba(0, 0, 0, 0.75)',\r\n        padding: '30px',\r\n        borderRadius: '12px',\r\n        color: 'white',\r\n      }}>\r\n        <h2 style={{ marginBottom: '20px' }}>Order Payment</h2>\r\n\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <p><strong>Transaction ID:</strong> {payment?.transactionId}</p>\r\n          <p><strong>Amount:</strong> â‚¹{payment?.amount}</p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div style={{ padding: '12px', border: '1px solid #ccc', borderRadius: '8px', marginBottom: '15px', background: 'white' }}>\r\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!stripe || !elements}\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: '#007bff',\r\n              color: 'white',\r\n              padding: '10px 16px',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer',\r\n              fontWeight: 'bold',\r\n              fontSize: '16px',\r\n            }}\r\n          >\r\n            Pay Now\r\n          </button>\r\n        </form>\r\n\r\n        {paymentStatus && (\r\n          <p style={{ marginTop: '20px', textAlign: 'center', color: 'lightgreen', fontWeight: 'bold' }}>{paymentStatus}</p>\r\n        )}\r\n\r\n        {paymentStatus === 'Payment successful!' && downloadUrl && (\r\n          <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n            <a\r\n              href={downloadUrl}\r\n              download\r\n              style={{\r\n                display: 'inline-block',\r\n                backgroundColor: '#28a745',\r\n                color: 'white',\r\n                padding: '10px 16px',\r\n                borderRadius: '6px',\r\n                textDecoration: 'none',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Download Artwork\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}