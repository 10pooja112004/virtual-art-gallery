{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pallavi\\\\Desktop\\\\React\\\\firstapp\\\\src\\\\components\\\\Header.js\";\n// import React, { useState } from \"react\";\n// import { useHistory } from \"react-router-dom\"; // ✅ Correct import for React Router v5\n// import Register from \"./auth/Register\";\n// import Login from \"./auth/Login\";\n// import \"./Header.css\";\n\n// const Header = () => {\n//   const history = useHistory(); // ✅ Initialize history for navigation\n//   const [openRegister, setOpenRegister] = useState(false);\n//   const [openLogin, setOpenLogin] = useState(false);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userRole, setUserRole] = useState(null); // ✅ Define userRole state\n\n//   const handleLogin = (token, role) => {\n//     console.log(\"✅ User logged in with token:\", token);\n//     localStorage.setItem(\"token\", token);\n//     localStorage.setItem(\"role\", role); // ✅ Store role\n//     setIsAuthenticated(true);\n//     setUserRole(role); // ✅ Update state\n\n//     // ✅ Use history correctly for navigation\n//     if (role === \"artist\") {\n//       history.push(\"/artist-dashboard\");\n//     } else {\n//       history.push(\"/dashboard\");\n//     }\n//   };\n\n//   // ✅ Define handleLogout function\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"role\");\n//     localStorage.removeItem(\"username\");\n//     history.push(\"/login\"); // Redirect to login page\n//   };\n//   return (\n//     <header className=\"tinted-header\">\n//       <h1 className=\"header-title\">Welcome To ArtFusion</h1>\n//       <div className=\"button-container\">\n//         {isAuthenticated ? (\n//           <>\n//             <button\n//               className=\"auth-button\"\n//               onClick={() => history.push(userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\")}\n//             >\n//               Dashboard\n//             </button>\n//             <button className=\"auth-button logout\" onClick={handleLogout}>\n//               Logout\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\n//               Register\n//             </button>\n//             <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\n//               Login\n//             </button>\n//           </>\n//         )}\n//       </div>\n\n//       {/* Signup & Login Dialogs */}\n//       <Register open={openRegister} onClose={() => setOpenRegister(false)} />\n//       <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\n//     </header>\n//   );\n// };\n\n// export default Header;\n// import React, { useState, useEffect } from \"react\";\n// import { NavLink, useHistory } from \"react-router-dom\"; // ✅ Import NavLink and useHistory\n// import Register from \"./auth/Register\";\n// import Login from \"./auth/Login\";\n// import \"./Header.css\";\n\n// const Header = () => {\n//   const history = useHistory();\n//   const [openRegister, setOpenRegister] = useState(false);\n//   const [openLogin, setOpenLogin] = useState(false);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userRole, setUserRole] = useState(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     const role = localStorage.getItem(\"role\")?.toLowerCase(); // Ensure lowercase comparison\n//     setIsAuthenticated(!!token);\n//     setUserRole(role);\n//   }, []);\n\n//   const handleLogin = (token, role) => {\n//     console.log(\"✅ User logged in with token:\", token);\n//     localStorage.setItem(\"token\", token);\n//     localStorage.setItem(\"role\", role.toLowerCase());\n//     setIsAuthenticated(true);\n//     setUserRole(role.toLowerCase());\n\n//     // ✅ Redirecting to correct dashboard\n//     history.push(role.toLowerCase() === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\");\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.clear();\n//     setIsAuthenticated(false);\n//     setUserRole(null);\n//     history.push(\"/login\");\n//   };\n\n//   return (\n//     <header className=\"tinted-header\">\n//       <h1 className=\"header-title\">Welcome To ArtFusion</h1>\n//       <div className=\"button-container\">\n//         {isAuthenticated ? (\n//           <>\n//             {/* ✅ NavLink for Routing */}\n//             <NavLink\n//               to={userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\"}\n//               className=\"auth-button\"\n//               activeClassName=\"active-link\"\n//             >\n//               Dashboard\n//             </NavLink>\n\n//             <button className=\"auth-button logout\" onClick={handleLogout}>\n//               Logout\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\n//               Register\n//             </button>\n//             <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\n//               Login\n//             </button>\n//           </>\n//         )}\n//       </div>\n\n//       {/* Register & Login Components */}\n//       <Register open={openRegister} onClose={() => setOpenRegister(false)} />\n//       <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\n//     </header>\n//   );\n// };\n\n// export default Header;\n// import React, { useState } from \"react\";\n// import { useHistory } from \"react-router-dom\"; // ✅ React Router v5\n// import Register from \"./auth/Register\";\n// import Login from \"./auth/Login\";\n// import \"./Header.css\";\n\n// const Header = () => {\n//   const history = useHistory();\n//   const [openRegister, setOpenRegister] = useState(false);\n//   const [openLogin, setOpenLogin] = useState(false);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userRole, setUserRole] = useState(null);\n\n//   const handleLogin = (token, role) => {\n//     console.log(\"✅ User logged in with token:\", token);\n//     localStorage.setItem(\"token\", token);\n//     localStorage.setItem(\"role\", role);\n//     setIsAuthenticated(true);\n//     setUserRole(role);\n\n//     if (role === \"artist\") {\n//       history.push(\"/artist-dashboard\");\n//     } else {\n//       history.push(\"/dashboard\");\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"role\");\n//     localStorage.removeItem(\"username\");\n//     history.push(\"/login\");\n//   };\n\n//   const isArtistDashboard = window.location.pathname === \"/artist-dashboard\";\n\n//   return (\n//     <header className=\"tinted-header\">\n//       {/* ✅ Hide heading on artist-dashboard */}\n//       {!isArtistDashboard && <h1 className=\"header-title\">Welcome To ArtFusion</h1>}\n\n//       <div className=\"button-container\">\n//         {isAuthenticated && !isArtistDashboard ? ( // ✅ Hide Dashboard & Logout on artist-dashboard\n//           <>\n//             <button\n//               className=\"auth-button\"\n//               onClick={() => history.push(userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\")}\n//             >\n//               Dashboard\n//             </button>\n//             <button className=\"auth-button logout\" onClick={handleLogout}>\n//               Logout\n//             </button>\n//           </>\n//         ) : !isAuthenticated ? (\n//           <>\n//             <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\n//               Register\n//             </button>\n//             <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\n//               Login\n//             </button>\n//           </>\n//         ) : null}\n//       </div>\n\n//       {/* Register & Login Components */}\n//       <Register open={openRegister} onClose={() => setOpenRegister(false)} />\n//       <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\n//     </header>\n//   );\n// };\n\n// export default Header;\n// import React, { useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n// import Register from \"./auth/Register\";\n// import Login from \"./auth/Login\";\n// import \"./Header.css\";\n\n// const Header = () => {\n//   const history = useHistory();\n//   const [openRegister, setOpenRegister] = useState(false);\n//   const [openLogin, setOpenLogin] = useState(false);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userRole, setUserRole] = useState(null);\n\n//   const handleLogin = (token, role) => {\n//     console.log(\"✅ User logged in with token:\", token);\n//     localStorage.setItem(\"token\", token);\n//     localStorage.setItem(\"role\", role);\n//     setIsAuthenticated(true);\n//     setUserRole(role);\n\n//     if (role === \"buyer\") {\n//       history.push(\"/dashboard\");\n//     } else {\n//       history.push(\"/artist-dashboard\");\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"role\");\n//     localStorage.removeItem(\"username\");\n//     history.push(\"/login\");\n//   };\n\n//   const isArtistDashboard = window.location.pathname === \"/artist-dashboard\";\n\n//   // ✅ Hide the entire header on /artist-dashboard\n//   if (isArtistDashboard) {\n//     return null;\n//   }\n\n//   return (\n//     <header className=\"tinted-header\">\n//       <h1 className=\"header-title\">Welcome To ArtFusion</h1>\n//       <div className=\"button-container\">\n//         {isAuthenticated ? (\n//           <>\n//             <button\n//               className=\"auth-button\"\n//               onClick={() => history.push(userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\")}\n//             >\n//               Dashboard\n//             </button>\n//             <button className=\"auth-button logout\" onClick={handleLogout}>\n//               Logout\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\n//               Register\n//             </button>\n//             <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\n//               Login\n//             </button>\n//           </>\n//         )}\n//       </div>\n\n//       {/* Register & Login Components */}\n//       <Register open={openRegister} onClose={() => setOpenRegister(false)} />\n//       <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\n//     </header>\n//   );\n// };\n\n// export default Header;\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Register from \"./auth/Register\";\nimport Login from \"./auth/Login\";\nimport \"./Header.css\";\nconst Header = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [openRegister, setOpenRegister] = useState(false);\n  const [openLogin, setOpenLogin] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const role = localStorage.getItem(\"role\");\n    if (token && role) {\n      setIsAuthenticated(true);\n      setUserRole(role);\n    }\n  }, [location.pathname]); // update when location changes\n\n  const handleLogin = (token, userId, role) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"role\", role);\n    setIsAuthenticated(true);\n    setUserRole(role);\n    if (role === \"buyer\") {\n      history.push(\"/dashboard\");\n    } else {\n      history.push(\"/artist-dashboard\");\n    }\n  };\n  const handleLogout = () => {\n    localStorage.clear();\n    setIsAuthenticated(false);\n    setUserRole(null);\n    history.push(\"/login\");\n  };\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"tinted-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }, \"Welcome To ArtFusion\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"auth-button\",\n    onClick: () => history.push(userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"auth-button logout\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, \"Logout\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"auth-button\",\n    onClick: () => setOpenRegister(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"auth-button\",\n    onClick: () => setOpenLogin(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(Register, {\n    open: openRegister,\n    onClose: () => setOpenRegister(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Login, {\n    open: openLogin,\n    onClose: () => setOpenLogin(false),\n    onLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Header;","map":{"version":3,"names":["React","useEffect","useState","useHistory","useLocation","Register","Login","Header","history","location","openRegister","setOpenRegister","openLogin","setOpenLogin","isAuthenticated","setIsAuthenticated","userRole","setUserRole","token","localStorage","getItem","role","pathname","handleLogin","userId","setItem","push","handleLogout","clear","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClick","open","onClose","onLogin"],"sources":["C:/Users/Pallavi/Desktop/React/firstapp/src/components/Header.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\"; // ✅ Correct import for React Router v5\r\n// import Register from \"./auth/Register\";\r\n// import Login from \"./auth/Login\";\r\n// import \"./Header.css\";\r\n\r\n// const Header = () => {\r\n//   const history = useHistory(); // ✅ Initialize history for navigation\r\n//   const [openRegister, setOpenRegister] = useState(false);\r\n//   const [openLogin, setOpenLogin] = useState(false);\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [userRole, setUserRole] = useState(null); // ✅ Define userRole state\r\n\r\n//   const handleLogin = (token, role) => {\r\n//     console.log(\"✅ User logged in with token:\", token);\r\n//     localStorage.setItem(\"token\", token);\r\n//     localStorage.setItem(\"role\", role); // ✅ Store role\r\n//     setIsAuthenticated(true);\r\n//     setUserRole(role); // ✅ Update state\r\n\r\n//     // ✅ Use history correctly for navigation\r\n//     if (role === \"artist\") {\r\n//       history.push(\"/artist-dashboard\");\r\n//     } else {\r\n//       history.push(\"/dashboard\");\r\n//     }\r\n//   };\r\n\r\n//   // ✅ Define handleLogout function\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"role\");\r\n//     localStorage.removeItem(\"username\");\r\n//     history.push(\"/login\"); // Redirect to login page\r\n//   };\r\n//   return (\r\n//     <header className=\"tinted-header\">\r\n//       <h1 className=\"header-title\">Welcome To ArtFusion</h1>\r\n//       <div className=\"button-container\">\r\n//         {isAuthenticated ? (\r\n//           <>\r\n//             <button\r\n//               className=\"auth-button\"\r\n//               onClick={() => history.push(userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\")}\r\n//             >\r\n//               Dashboard\r\n//             </button>\r\n//             <button className=\"auth-button logout\" onClick={handleLogout}>\r\n//               Logout\r\n//             </button>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\r\n//               Register\r\n//             </button>\r\n//             <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\r\n//               Login\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Signup & Login Dialogs */}\r\n//       <Register open={openRegister} onClose={() => setOpenRegister(false)} />\r\n//       <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n// export default Header;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { NavLink, useHistory } from \"react-router-dom\"; // ✅ Import NavLink and useHistory\r\n// import Register from \"./auth/Register\";\r\n// import Login from \"./auth/Login\";\r\n// import \"./Header.css\";\r\n\r\n// const Header = () => {\r\n//   const history = useHistory();\r\n//   const [openRegister, setOpenRegister] = useState(false);\r\n//   const [openLogin, setOpenLogin] = useState(false);\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [userRole, setUserRole] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"token\");\r\n//     const role = localStorage.getItem(\"role\")?.toLowerCase(); // Ensure lowercase comparison\r\n//     setIsAuthenticated(!!token);\r\n//     setUserRole(role);\r\n//   }, []);\r\n\r\n//   const handleLogin = (token, role) => {\r\n//     console.log(\"✅ User logged in with token:\", token);\r\n//     localStorage.setItem(\"token\", token);\r\n//     localStorage.setItem(\"role\", role.toLowerCase());\r\n//     setIsAuthenticated(true);\r\n//     setUserRole(role.toLowerCase());\r\n\r\n//     // ✅ Redirecting to correct dashboard\r\n//     history.push(role.toLowerCase() === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\");\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.clear();\r\n//     setIsAuthenticated(false);\r\n//     setUserRole(null);\r\n//     history.push(\"/login\");\r\n//   };\r\n\r\n//   return (\r\n//     <header className=\"tinted-header\">\r\n//       <h1 className=\"header-title\">Welcome To ArtFusion</h1>\r\n//       <div className=\"button-container\">\r\n//         {isAuthenticated ? (\r\n//           <>\r\n//             {/* ✅ NavLink for Routing */}\r\n//             <NavLink\r\n//               to={userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\"}\r\n//               className=\"auth-button\"\r\n//               activeClassName=\"active-link\"\r\n//             >\r\n//               Dashboard\r\n//             </NavLink>\r\n\r\n//             <button className=\"auth-button logout\" onClick={handleLogout}>\r\n//               Logout\r\n//             </button>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\r\n//               Register\r\n//             </button>\r\n//             <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\r\n//               Login\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Register & Login Components */}\r\n//       <Register open={openRegister} onClose={() => setOpenRegister(false)} />\r\n//       <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n// export default Header;\r\n// import React, { useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\"; // ✅ React Router v5\r\n// import Register from \"./auth/Register\";\r\n// import Login from \"./auth/Login\";\r\n// import \"./Header.css\";\r\n\r\n// const Header = () => {\r\n//   const history = useHistory();\r\n//   const [openRegister, setOpenRegister] = useState(false);\r\n//   const [openLogin, setOpenLogin] = useState(false);\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [userRole, setUserRole] = useState(null);\r\n\r\n//   const handleLogin = (token, role) => {\r\n//     console.log(\"✅ User logged in with token:\", token);\r\n//     localStorage.setItem(\"token\", token);\r\n//     localStorage.setItem(\"role\", role);\r\n//     setIsAuthenticated(true);\r\n//     setUserRole(role);\r\n\r\n//     if (role === \"artist\") {\r\n//       history.push(\"/artist-dashboard\");\r\n//     } else {\r\n//       history.push(\"/dashboard\");\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"role\");\r\n//     localStorage.removeItem(\"username\");\r\n//     history.push(\"/login\");\r\n//   };\r\n\r\n//   const isArtistDashboard = window.location.pathname === \"/artist-dashboard\";\r\n\r\n//   return (\r\n//     <header className=\"tinted-header\">\r\n//       {/* ✅ Hide heading on artist-dashboard */}\r\n//       {!isArtistDashboard && <h1 className=\"header-title\">Welcome To ArtFusion</h1>}\r\n\r\n//       <div className=\"button-container\">\r\n//         {isAuthenticated && !isArtistDashboard ? ( // ✅ Hide Dashboard & Logout on artist-dashboard\r\n//           <>\r\n//             <button\r\n//               className=\"auth-button\"\r\n//               onClick={() => history.push(userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\")}\r\n//             >\r\n//               Dashboard\r\n//             </button>\r\n//             <button className=\"auth-button logout\" onClick={handleLogout}>\r\n//               Logout\r\n//             </button>\r\n//           </>\r\n//         ) : !isAuthenticated ? (\r\n//           <>\r\n//             <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\r\n//               Register\r\n//             </button>\r\n//             <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\r\n//               Login\r\n//             </button>\r\n//           </>\r\n//         ) : null}\r\n//       </div>\r\n\r\n//       {/* Register & Login Components */}\r\n//       <Register open={openRegister} onClose={() => setOpenRegister(false)} />\r\n//       <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n// export default Header;\r\n// import React, { useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import Register from \"./auth/Register\";\r\n// import Login from \"./auth/Login\";\r\n// import \"./Header.css\";\r\n\r\n// const Header = () => {\r\n//   const history = useHistory();\r\n//   const [openRegister, setOpenRegister] = useState(false);\r\n//   const [openLogin, setOpenLogin] = useState(false);\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [userRole, setUserRole] = useState(null);\r\n\r\n//   const handleLogin = (token, role) => {\r\n//     console.log(\"✅ User logged in with token:\", token);\r\n//     localStorage.setItem(\"token\", token);\r\n//     localStorage.setItem(\"role\", role);\r\n//     setIsAuthenticated(true);\r\n//     setUserRole(role);\r\n\r\n//     if (role === \"buyer\") {\r\n//       history.push(\"/dashboard\");\r\n//     } else {\r\n//       history.push(\"/artist-dashboard\");\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"role\");\r\n//     localStorage.removeItem(\"username\");\r\n//     history.push(\"/login\");\r\n//   };\r\n\r\n//   const isArtistDashboard = window.location.pathname === \"/artist-dashboard\";\r\n\r\n//   // ✅ Hide the entire header on /artist-dashboard\r\n//   if (isArtistDashboard) {\r\n//     return null;\r\n//   }\r\n\r\n//   return (\r\n//     <header className=\"tinted-header\">\r\n//       <h1 className=\"header-title\">Welcome To ArtFusion</h1>\r\n//       <div className=\"button-container\">\r\n//         {isAuthenticated ? (\r\n//           <>\r\n//             <button\r\n//               className=\"auth-button\"\r\n//               onClick={() => history.push(userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\")}\r\n//             >\r\n//               Dashboard\r\n//             </button>\r\n//             <button className=\"auth-button logout\" onClick={handleLogout}>\r\n//               Logout\r\n//             </button>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\r\n//               Register\r\n//             </button>\r\n//             <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\r\n//               Login\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Register & Login Components */}\r\n//       <Register open={openRegister} onClose={() => setOpenRegister(false)} />\r\n//       <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n// export default Header;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Register from \"./auth/Register\";\r\nimport Login from \"./auth/Login\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [openRegister, setOpenRegister] = useState(false);\r\n  const [openLogin, setOpenLogin] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userRole, setUserRole] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const role = localStorage.getItem(\"role\");\r\n    if (token && role) {\r\n      setIsAuthenticated(true);\r\n      setUserRole(role);\r\n    }\r\n  }, [location.pathname]); // update when location changes\r\n\r\n  const handleLogin = (token,userId, role) => {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"userId\", userId); \r\n    localStorage.setItem(\"role\", role);\r\n    setIsAuthenticated(true);\r\n    setUserRole(role);\r\n\r\n    if (role === \"buyer\") {\r\n      history.push(\"/dashboard\");\r\n    } else {\r\n      history.push(\"/artist-dashboard\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    setIsAuthenticated(false);\r\n    setUserRole(null);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"tinted-header\">\r\n      <h1 className=\"header-title\">Welcome To ArtFusion</h1>\r\n      <div className=\"button-container\">\r\n        {isAuthenticated ? (\r\n          <>\r\n            <button\r\n              className=\"auth-button\"\r\n              onClick={() =>\r\n                history.push(userRole === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\")\r\n              }\r\n            >\r\n              Dashboard\r\n            </button>\r\n            <button className=\"auth-button logout\" onClick={handleLogout}>\r\n              Logout\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <button className=\"auth-button\" onClick={() => setOpenRegister(true)}>\r\n              Register\r\n            </button>\r\n            <button className=\"auth-button\" onClick={() => setOpenLogin(true)}>\r\n              Login\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <Register open={openRegister} onClose={() => setOpenRegister(false)} />\r\n      <Login open={openLogin} onClose={() => setOpenLogin(false)} onLogin={handleLogin} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module"}