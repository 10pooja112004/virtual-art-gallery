{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pallavi\\\\Desktop\\\\React\\\\firstapp\\\\src\\\\components\\\\userboard\\\\OrderDetails.js\";\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\n// import axios from 'axios';\n\n// const CARD_ELEMENT_OPTIONS = {\n//   style: {\n//     base: {\n//       fontSize: '16px',\n//       color: '#32325d',\n//       '::placeholder': {\n//         color: '#a0aec0',\n//       },\n//     },\n//     invalid: {\n//       color: '#e53e3e',\n//     },\n//   },\n// };\n\n// const OrderDetails = () => {\n//   const { orderId } = useParams();\n//   const numericOrderId = Number(orderId);\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   const [payment, setPayment] = useState(null);\n//   const [clientSecret, setClientSecret] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [paymentStatus, setPaymentStatus] = useState('');\n//   const [error, setError] = useState('');\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     const fetchPaymentIntentAndDetails = async () => {\n//       try {\n//         const intentRes = await axios.post(\n//           'http://localhost:8080/api/payments/create-payment-intent',\n//           { orderId: numericOrderId },\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setClientSecret(intentRes.data.clientSecret);\n\n//         const paymentRes = await axios.get(\n//           `http://localhost:8080/api/payments/${orderId}`,\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setPayment(paymentRes.data);\n//         setLoading(false);\n//       } catch (err) {\n//         console.error('Error during payment setup:', err);\n//         setError(\n//           err.response?.status === 403\n//             ? 'You are not authorized to view this order.'\n//             : 'Something went wrong. Please try again later.'\n//         );\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPaymentIntentAndDetails();\n//   }, [orderId, token]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!stripe || !elements) return;\n\n//     const result = await stripe.confirmCardPayment(clientSecret, {\n//       payment_method: {\n//         card: elements.getElement(CardElement),\n//       },\n//     });\n\n//     if (result.error) {\n//       setError(result.error.message);\n//     } else {\n//       const status = result.paymentIntent.status;\n//       const mappedStatus =\n//         status === 'succeeded'\n//           ? 'COMPLETED'\n//           : status === 'processing'\n//           ? 'PENDING'\n//           : 'FAILED';\n\n//       try {\n//         await axios.post(\n//           'http://localhost:8080/api/payments/confirm',\n//           {\n//             transactionId: result.paymentIntent.id,\n//             status: mappedStatus,\n//           },\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setPaymentStatus(\n//           mappedStatus === 'COMPLETED'\n//             ? 'Payment successful!'\n//             : 'Payment submitted but not completed.'\n//         );\n//       } catch (err) {\n//         console.error('Error confirming payment:', err);\n//         setError('Failed to confirm payment to server.');\n//       }\n//     }\n//   };\n\n//   if (loading) return <p className=\"text-center text-white mt-10\">Loading...</p>;\n//   if (error) return <p className=\"text-center text-red-500 mt-10\">{error}</p>;\n\n//   return (\n//     <div\n//       className=\"flex justify-center items-center min-h-screen w-full px-4\"\n//       style={{\n//         padding: \"20px\",\n//         backgroundImage: `url(\"/artist.png\")`,\n//         backgroundSize: \"100% 100%\",\n//         backgroundRepeat: \"no-repeat\",\n//         backgroundPosition: \"center\",\n//         backgroundAttachment: \"fixed\",\n//         minHeight: \"100vh\",\n//         width: \"100vw\",\n//         overflowX: \"hidden\",\n//       }}\n//     >\n//       <div className=\"w-full max-w-md bg-black bg-opacity-70 rounded-2xl shadow-xl p-8\">\n//         <h2 style={{ color: 'white', fontSize: '24px', marginBottom: '20px' }}>Order Payment</h2>\n\n//         <div style={{ padding: '10px', marginBottom: '20px' }}>\n//           <p style={{ color: 'white' }}>\n//             <strong>Transaction ID:</strong> {payment.transactionId}\n//           </p>\n//           <p style={{ color: 'white' }}>\n//             <strong>Amount:</strong> â‚¹{payment.amount}\n//           </p>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"p-4 border border-gray-300 rounded-md mb-4 bg-white\">\n//             <CardElement options={CARD_ELEMENT_OPTIONS} />\n//           </div>\n\n//           <button\n//             type=\"submit\"\n//             disabled={!stripe || !elements}\n//             className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-200\"\n//           >\n//             Pay Now\n//           </button>\n//         </form>\n\n//         {paymentStatus && (\n//           <p className=\"mt-4 text-center text-green-400 font-semibold\">{paymentStatus}</p>\n//         )}\n\n//         {paymentStatus === 'Payment successful!' && payment?.downloadUrl && (\n//           <div style={{ marginTop: '24px', textAlign: 'center' }}>\n//           <a\n//             href={payment.downloadUrl}\n//             download\n//             style={{\n//               display: 'inline-block',\n//               backgroundColor: '#16a34a',\n//               color: '#fff',\n//               fontWeight: 'bold',\n//               padding: '10px 24px',\n//               borderRadius: '8px',\n//               textDecoration: 'none',\n//               transition: 'background-color 0.2s ease-in-out'\n//             }}\n\n//           >\n//             Download Artwork\n//           </a>\n//         </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderDetails;\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      fontSize: '16px',\n      color: '#32325d',\n      '::placeholder': {\n        color: '#a0aec0'\n      }\n    },\n    invalid: {\n      color: '#e53e3e'\n    }\n  }\n};\nconst OrderDetails = () => {\n  const {\n    orderId\n  } = useParams();\n  const numericOrderId = Number(orderId);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [payment, setPayment] = useState(null);\n  const [clientSecret, setClientSecret] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [paymentStatus, setPaymentStatus] = useState('');\n  const [error, setError] = useState('');\n  const [downloadUrl, setDownloadUrl] = useState('');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const fetchPaymentDetails = async () => {\n      try {\n        const intentRes = await axios.post('http://localhost:8080/api/payments/create-payment-intent', {\n          orderId: numericOrderId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setClientSecret(intentRes.data.clientSecret);\n        const orderRes = await axios.get(`http://localhost:8080/api/payments/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const orderData = orderRes.data;\n        setPayment({\n          artworkId: orderData.artworkId,\n          amount: orderData.totalPrice\n        });\n        setLoading(false);\n      } catch (err) {\n        var _err$response;\n        console.error('Error fetching payment details:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 403 ? 'You are not authorized to view this order.' : 'Something went wrong. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchPaymentDetails();\n  }, [orderId, token, numericOrderId]);\n  const fetchDownloadUrl = async artworkId => {\n    try {\n      const res = await axios.get(`http://localhost:8080/api/artworks/download/${artworkId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Received download URL:', res.data.downloadUrl);\n      if (res.data.downloadUrl) {\n        setDownloadUrl(res.data.downloadUrl);\n      } else {\n        console.warn('No download URL found in response');\n        setError('Download URL not received.');\n      }\n    } catch (err) {\n      console.error('Error fetching download URL:', err);\n      setError('Failed to fetch download link.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) return;\n    try {\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (result.error) {\n        setError(result.error.message);\n      } else {\n        const status = result.paymentIntent.status;\n        const mappedStatus = status === 'succeeded' ? 'COMPLETED' : status === 'processing' ? 'PENDING' : 'FAILED';\n        await axios.post('http://localhost:8080/api/payments/confirm', {\n          transactionId: result.paymentIntent.id,\n          status: mappedStatus\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPaymentStatus(mappedStatus === 'COMPLETED' ? 'Payment successful!' : 'Payment submitted but not completed.');\n        if (mappedStatus === 'COMPLETED') {\n          console.log(\"Trying to fetch artwork download URL with ID:\", payment === null || payment === void 0 ? void 0 : payment.artworkId);\n          if (payment === null || payment === void 0 ? void 0 : payment.artworkId) {\n            fetchDownloadUrl(payment.artworkId);\n          } else {\n            console.warn(\"No artworkId found in payment data\");\n          }\n        }\n      }\n    } catch (err) {\n      console.error('Error confirming payment:', err);\n      setError('Failed to confirm payment on the server.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"20px\",\n      backgroundImage: `url(\"/artist.png\")`,\n      backgroundSize: \"cover\",\n      backgroundAttachment: \"fixed\",\n      minHeight: \"100vh\",\n      width: \"100vw\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: '500px',\n      background: 'rgba(0, 0, 0, 0.75)',\n      padding: '30px',\n      borderRadius: '12px',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, \"Order Payment\"), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 16\n    }\n  }, \"Amount:\"), \" \\u20B9\", payment === null || payment === void 0 ? void 0 : payment.amount), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '12px',\n      border: '1px solid #ccc',\n      borderRadius: '8px',\n      marginBottom: '15px',\n      background: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    options: CARD_ELEMENT_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe || !elements,\n    style: {\n      width: '100%',\n      backgroundColor: '#007bff',\n      color: 'white',\n      padding: '10px 16px',\n      border: 'none',\n      borderRadius: '6px',\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, \"Pay Now\")), paymentStatus && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: '20px',\n      textAlign: 'center',\n      color: 'lightgreen',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 15\n    }\n  }, paymentStatus), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: '10px',\n      color: 'red',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }, error), paymentStatus === 'Payment successful!' && downloadUrl && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '20px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: downloadUrl,\n    download: true,\n    style: {\n      display: 'inline-block',\n      backgroundColor: '#28a745',\n      color: 'white',\n      padding: '10px 16px',\n      borderRadius: '6px',\n      textDecoration: 'none',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }\n  }, \"Download Artwork\")))));\n};\nexport default OrderDetails;","map":{"version":3,"names":["React","useState","useEffect","useParams","useStripe","useElements","CardElement","axios","CARD_ELEMENT_OPTIONS","style","base","fontSize","color","invalid","OrderDetails","orderId","numericOrderId","Number","stripe","elements","payment","setPayment","clientSecret","setClientSecret","loading","setLoading","paymentStatus","setPaymentStatus","error","setError","downloadUrl","setDownloadUrl","token","localStorage","getItem","fetchPaymentDetails","intentRes","post","headers","Authorization","data","orderRes","get","orderData","artworkId","amount","totalPrice","err","_err$response","console","response","status","fetchDownloadUrl","res","log","warn","handleSubmit","e","preventDefault","result","confirmCardPayment","payment_method","card","getElement","message","paymentIntent","mappedStatus","transactionId","id","createElement","padding","backgroundImage","backgroundSize","backgroundAttachment","minHeight","width","display","justifyContent","alignItems","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","background","borderRadius","Fragment","onSubmit","border","marginBottom","options","type","disabled","backgroundColor","cursor","fontWeight","marginTop","textAlign","href","download","textDecoration"],"sources":["C:/Users/Pallavi/Desktop/React/firstapp/src/components/userboard/OrderDetails.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\n// import axios from 'axios';\r\n\r\n// const CARD_ELEMENT_OPTIONS = {\r\n//   style: {\r\n//     base: {\r\n//       fontSize: '16px',\r\n//       color: '#32325d',\r\n//       '::placeholder': {\r\n//         color: '#a0aec0',\r\n//       },\r\n//     },\r\n//     invalid: {\r\n//       color: '#e53e3e',\r\n//     },\r\n//   },\r\n// };\r\n\r\n// const OrderDetails = () => {\r\n//   const { orderId } = useParams();\r\n//   const numericOrderId = Number(orderId);\r\n//   const stripe = useStripe();\r\n//   const elements = useElements();\r\n\r\n//   const [payment, setPayment] = useState(null);\r\n//   const [clientSecret, setClientSecret] = useState('');\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [paymentStatus, setPaymentStatus] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     const fetchPaymentIntentAndDetails = async () => {\r\n//       try {\r\n//         const intentRes = await axios.post(\r\n//           'http://localhost:8080/api/payments/create-payment-intent',\r\n//           { orderId: numericOrderId },\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setClientSecret(intentRes.data.clientSecret);\r\n\r\n//         const paymentRes = await axios.get(\r\n//           `http://localhost:8080/api/payments/${orderId}`,\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setPayment(paymentRes.data);\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         console.error('Error during payment setup:', err);\r\n//         setError(\r\n//           err.response?.status === 403\r\n//             ? 'You are not authorized to view this order.'\r\n//             : 'Something went wrong. Please try again later.'\r\n//         );\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchPaymentIntentAndDetails();\r\n//   }, [orderId, token]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!stripe || !elements) return;\r\n\r\n//     const result = await stripe.confirmCardPayment(clientSecret, {\r\n//       payment_method: {\r\n//         card: elements.getElement(CardElement),\r\n//       },\r\n//     });\r\n\r\n//     if (result.error) {\r\n//       setError(result.error.message);\r\n//     } else {\r\n//       const status = result.paymentIntent.status;\r\n//       const mappedStatus =\r\n//         status === 'succeeded'\r\n//           ? 'COMPLETED'\r\n//           : status === 'processing'\r\n//           ? 'PENDING'\r\n//           : 'FAILED';\r\n\r\n//       try {\r\n//         await axios.post(\r\n//           'http://localhost:8080/api/payments/confirm',\r\n//           {\r\n//             transactionId: result.paymentIntent.id,\r\n//             status: mappedStatus,\r\n//           },\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setPaymentStatus(\r\n//           mappedStatus === 'COMPLETED'\r\n//             ? 'Payment successful!'\r\n//             : 'Payment submitted but not completed.'\r\n//         );\r\n//       } catch (err) {\r\n//         console.error('Error confirming payment:', err);\r\n//         setError('Failed to confirm payment to server.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p className=\"text-center text-white mt-10\">Loading...</p>;\r\n//   if (error) return <p className=\"text-center text-red-500 mt-10\">{error}</p>;\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"flex justify-center items-center min-h-screen w-full px-4\"\r\n//       style={{\r\n//         padding: \"20px\",\r\n//         backgroundImage: `url(\"/artist.png\")`,\r\n//         backgroundSize: \"100% 100%\",\r\n//         backgroundRepeat: \"no-repeat\",\r\n//         backgroundPosition: \"center\",\r\n//         backgroundAttachment: \"fixed\",\r\n//         minHeight: \"100vh\",\r\n//         width: \"100vw\",\r\n//         overflowX: \"hidden\",\r\n//       }}\r\n//     >\r\n//       <div className=\"w-full max-w-md bg-black bg-opacity-70 rounded-2xl shadow-xl p-8\">\r\n//         <h2 style={{ color: 'white', fontSize: '24px', marginBottom: '20px' }}>Order Payment</h2>\r\n  \r\n//         <div style={{ padding: '10px', marginBottom: '20px' }}>\r\n//           <p style={{ color: 'white' }}>\r\n//             <strong>Transaction ID:</strong> {payment.transactionId}\r\n//           </p>\r\n//           <p style={{ color: 'white' }}>\r\n//             <strong>Amount:</strong> â‚¹{payment.amount}\r\n//           </p>\r\n//         </div>\r\n  \r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"p-4 border border-gray-300 rounded-md mb-4 bg-white\">\r\n//             <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n//           </div>\r\n  \r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!stripe || !elements}\r\n//             className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-200\"\r\n//           >\r\n//             Pay Now\r\n//           </button>\r\n//         </form>\r\n  \r\n//         {paymentStatus && (\r\n//           <p className=\"mt-4 text-center text-green-400 font-semibold\">{paymentStatus}</p>\r\n//         )}\r\n  \r\n//         {paymentStatus === 'Payment successful!' && payment?.downloadUrl && (\r\n//           <div style={{ marginTop: '24px', textAlign: 'center' }}>\r\n//           <a\r\n//             href={payment.downloadUrl}\r\n//             download\r\n//             style={{\r\n//               display: 'inline-block',\r\n//               backgroundColor: '#16a34a',\r\n//               color: '#fff',\r\n//               fontWeight: 'bold',\r\n//               padding: '10px 24px',\r\n//               borderRadius: '8px',\r\n//               textDecoration: 'none',\r\n//               transition: 'background-color 0.2s ease-in-out'\r\n//             }}\r\n            \r\n//           >\r\n//             Download Artwork\r\n//           </a>\r\n//         </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OrderDetails;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      fontSize: '16px',\r\n      color: '#32325d',\r\n      '::placeholder': { color: '#a0aec0' },\r\n    },\r\n    invalid: { color: '#e53e3e' },\r\n  },\r\n};\r\n\r\nconst OrderDetails = () => {\r\n  const { orderId } = useParams();\r\n  const numericOrderId = Number(orderId);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [payment, setPayment] = useState(null);\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [paymentStatus, setPaymentStatus] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [downloadUrl, setDownloadUrl] = useState('');\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    const fetchPaymentDetails = async () => {\r\n      try {\r\n        const intentRes = await axios.post(\r\n          'http://localhost:8080/api/payments/create-payment-intent',\r\n          { orderId: numericOrderId },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        setClientSecret(intentRes.data.clientSecret);\r\n\r\n        const orderRes = await axios.get(\r\n          `http://localhost:8080/api/payments/${orderId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        const orderData = orderRes.data;\r\n        setPayment({\r\n          artworkId: orderData.artworkId,\r\n          amount: orderData.totalPrice,\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching payment details:', err);\r\n        setError(\r\n          err.response?.status === 403\r\n            ? 'You are not authorized to view this order.'\r\n            : 'Something went wrong. Please try again.'\r\n        );\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPaymentDetails();\r\n  }, [orderId, token, numericOrderId]);\r\n\r\n  const fetchDownloadUrl = async (artworkId) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `http://localhost:8080/api/artworks/download/${artworkId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      console.log('Received download URL:', res.data.downloadUrl);\r\n\r\n      if (res.data.downloadUrl) {\r\n        setDownloadUrl(res.data.downloadUrl);\r\n      } else {\r\n        console.warn('No download URL found in response');\r\n        setError('Download URL not received.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching download URL:', err);\r\n      setError('Failed to fetch download link.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) return;\r\n\r\n    try {\r\n      const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: { card: elements.getElement(CardElement) },\r\n      });\r\n\r\n      if (result.error) {\r\n        setError(result.error.message);\r\n      } else {\r\n        const status = result.paymentIntent.status;\r\n        const mappedStatus =\r\n          status === 'succeeded'\r\n            ? 'COMPLETED'\r\n            : status === 'processing'\r\n            ? 'PENDING'\r\n            : 'FAILED';\r\n\r\n        await axios.post(\r\n          'http://localhost:8080/api/payments/confirm',\r\n          {\r\n            transactionId: result.paymentIntent.id,\r\n            status: mappedStatus,\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        setPaymentStatus(\r\n          mappedStatus === 'COMPLETED'\r\n            ? 'Payment successful!'\r\n            : 'Payment submitted but not completed.'\r\n        );\r\n\r\n        if (mappedStatus === 'COMPLETED') {\r\n          console.log(\"Trying to fetch artwork download URL with ID:\", payment?.artworkId);\r\n          if (payment?.artworkId) {\r\n            fetchDownloadUrl(payment.artworkId);\r\n          } else {\r\n            console.warn(\"No artworkId found in payment data\");\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error confirming payment:', err);\r\n      setError('Failed to confirm payment on the server.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"20px\",\r\n        backgroundImage: `url(\"/artist.png\")`,\r\n        backgroundSize: \"cover\",\r\n        backgroundAttachment: \"fixed\",\r\n        minHeight: \"100vh\",\r\n        width: \"100vw\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div style={{\r\n        width: '100%',\r\n        maxWidth: '500px',\r\n        background: 'rgba(0, 0, 0, 0.75)',\r\n        padding: '30px',\r\n        borderRadius: '12px',\r\n        color: 'white',\r\n      }}>\r\n        <h2>Order Payment</h2>\r\n\r\n        {loading ? (\r\n          <p style={{ color: 'white' }}>Loading...</p>\r\n        ) : (\r\n          <>\r\n            <p><strong>Amount:</strong> â‚¹{payment?.amount}</p>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <div style={{\r\n                padding: '12px',\r\n                border: '1px solid #ccc',\r\n                borderRadius: '8px',\r\n                marginBottom: '15px',\r\n                background: 'white'\r\n              }}>\r\n                <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={!stripe || !elements}\r\n                style={{\r\n                  width: '100%',\r\n                  backgroundColor: '#007bff',\r\n                  color: 'white',\r\n                  padding: '10px 16px',\r\n                  border: 'none',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer',\r\n                  fontWeight: 'bold',\r\n                  fontSize: '16px',\r\n                }}\r\n              >\r\n                Pay Now\r\n              </button>\r\n            </form>\r\n\r\n            {paymentStatus && (\r\n              <p style={{ marginTop: '20px', textAlign: 'center', color: 'lightgreen', fontWeight: 'bold' }}>\r\n                {paymentStatus}\r\n              </p>\r\n            )}\r\n\r\n            {error && (\r\n              <p style={{ marginTop: '10px', color: 'red', textAlign: 'center' }}>{error}</p>\r\n            )}\r\n\r\n            {paymentStatus === 'Payment successful!' && downloadUrl && (\r\n              <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n                <a\r\n                  href={downloadUrl}\r\n                  download\r\n                  style={{\r\n                    display: 'inline-block',\r\n                    backgroundColor: '#28a745',\r\n                    color: 'white',\r\n                    padding: '10px 16px',\r\n                    borderRadius: '6px',\r\n                    textDecoration: 'none',\r\n                    fontWeight: 'bold',\r\n                  }}\r\n                >\r\n                  Download Artwork\r\n                </a>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}