{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pallavi\\\\Desktop\\\\React\\\\firstapp\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\n\nconst LoginDialog = ({\n  open,\n  onClose,\n  onLogin\n}) => {\n  const navigate = useNavigate(); // ✅ Initialize navigate\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState({\n    text: \"\",\n    type: \"error\"\n  });\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  // Handle input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/users/login`, formData);\n\n      // ✅ Store JWT token\n      localStorage.setItem(\"token\", response.data.token);\n\n      // ✅ Update authentication state\n      onLogin(response.data.token);\n      setMessage({\n        text: \"✅ Login successful! Redirecting...\",\n        type: \"success\"\n      });\n      setSnackbarOpen(true);\n\n      // ✅ Redirect to dashboard\n      setTimeout(() => {\n        navigate(\"/dashboard\"); // ✅ Change this to your intended route\n      }, 1500);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage({\n        text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"❌ Invalid email or password\",\n        type: \"error\"\n      });\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Handle dialog close\n  const handleClose = () => {\n    setFormData({\n      email: \"\",\n      password: \"\"\n    });\n    setMessage({\n      text: \"\",\n      type: \"error\"\n    });\n    onClose();\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Login\", /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    onClick: handleClose,\n    sx: {\n      position: \"absolute\",\n      right: 8,\n      top: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    fullWidth: true,\n    margin: \"dense\",\n    value: formData.email,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    fullWidth: true,\n    margin: \"dense\",\n    value: formData.password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackbarOpen,\n    autoHideDuration: 3000,\n    onClose: () => setSnackbarOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: () => setSnackbarOpen(false),\n    severity: message.type,\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, message.text)));\n};\nexport default LoginDialog;","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","IconButton","Snackbar","Alert","CloseIcon","axios","useNavigate","LoginDialog","open","onClose","onLogin","navigate","formData","setFormData","email","password","message","setMessage","text","type","snackbarOpen","setSnackbarOpen","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","process","env","REACT_APP_API_BASE_URL","localStorage","setItem","data","token","setTimeout","error","_error$response","_error$response$data","handleClose","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","position","right","top","label","fullWidth","margin","onChange","required","color","variant","autoHideDuration","severity","width"],"sources":["C:/Users/Pallavi/Desktop/React/firstapp/src/components/auth/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { \r\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\r\n\r\nconst LoginDialog = ({ open, onClose, onLogin }) => {\r\n  const navigate = useNavigate(); // ✅ Initialize navigate\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [message, setMessage] = useState({ text: \"\", type: \"error\" });\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/users/login`, \r\n        formData\r\n      );\r\n\r\n      // ✅ Store JWT token\r\n      localStorage.setItem(\"token\", response.data.token);\r\n\r\n      // ✅ Update authentication state\r\n      onLogin(response.data.token);\r\n\r\n      setMessage({ text: \"✅ Login successful! Redirecting...\", type: \"success\" });\r\n      setSnackbarOpen(true);\r\n\r\n      // ✅ Redirect to dashboard\r\n      setTimeout(() => {\r\n        navigate(\"/dashboard\"); // ✅ Change this to your intended route\r\n      }, 1500);\r\n    } catch (error) {\r\n      setMessage({ \r\n        text: error.response?.data?.message || \"❌ Invalid email or password\", \r\n        type: \"error\" \r\n      });\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Handle dialog close\r\n  const handleClose = () => {\r\n    setFormData({ email: \"\", password: \"\" });\r\n    setMessage({ text: \"\", type: \"error\" });\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>\r\n        Login\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleClose}\r\n          sx={{ position: \"absolute\", right: 8, top: 8 }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <TextField \r\n          label=\"Email\" \r\n          name=\"email\" \r\n          type=\"email\" \r\n          fullWidth \r\n          margin=\"dense\" \r\n          value={formData.email} \r\n          onChange={handleChange} \r\n          required\r\n        />\r\n        <TextField \r\n          label=\"Password\" \r\n          name=\"password\" \r\n          type=\"password\" \r\n          fullWidth \r\n          margin=\"dense\" \r\n          value={formData.password} \r\n          onChange={handleChange} \r\n          required\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"secondary\">Cancel</Button>\r\n        <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\r\n      </DialogActions>\r\n\r\n      {/* Snackbar for Feedback */}\r\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\r\n        <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\r\n          {message.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LoginDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}