{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pallavi\\\\Desktop\\\\React\\\\firstapp\\\\src\\\\components\\\\userboard\\\\OrderDetails.js\";\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\n// import axios from 'axios';\n\n// const CARD_ELEMENT_OPTIONS = {\n//   style: {\n//     base: {\n//       fontSize: '16px',\n//       color: '#32325d',\n//       '::placeholder': {\n//         color: '#a0aec0',\n//       },\n//     },\n//     invalid: {\n//       color: '#e53e3e',\n//     },\n//   },\n// };\n\n// const OrderDetails = () => {\n//   const { orderId } = useParams();\n//   const numericOrderId = Number(orderId);\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   const [payment, setPayment] = useState(null);\n//   const [clientSecret, setClientSecret] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [paymentStatus, setPaymentStatus] = useState('');\n//   const [error, setError] = useState('');\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     const fetchPaymentIntentAndDetails = async () => {\n//       try {\n//         const intentRes = await axios.post(\n//           'http://localhost:8080/api/payments/create-payment-intent',\n//           { orderId: numericOrderId },\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setClientSecret(intentRes.data.clientSecret);\n\n//         const paymentRes = await axios.get(\n//           `http://localhost:8080/api/payments/${orderId}`,\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setPayment(paymentRes.data);\n//         setLoading(false);\n//       } catch (err) {\n//         console.error('Error during payment setup:', err);\n//         setError(\n//           err.response?.status === 403\n//             ? 'You are not authorized to view this order.'\n//             : 'Something went wrong. Please try again later.'\n//         );\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPaymentIntentAndDetails();\n//   }, [orderId, token]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!stripe || !elements) return;\n\n//     const result = await stripe.confirmCardPayment(clientSecret, {\n//       payment_method: {\n//         card: elements.getElement(CardElement),\n//       },\n//     });\n\n//     if (result.error) {\n//       setError(result.error.message);\n//     } else {\n//       const status = result.paymentIntent.status;\n//       const mappedStatus =\n//         status === 'succeeded'\n//           ? 'COMPLETED'\n//           : status === 'processing'\n//           ? 'PENDING'\n//           : 'FAILED';\n\n//       try {\n//         await axios.post(\n//           'http://localhost:8080/api/payments/confirm',\n//           {\n//             transactionId: result.paymentIntent.id,\n//             status: mappedStatus,\n//           },\n//           { headers: { Authorization: `Bearer ${token}` } }\n//         );\n\n//         setPaymentStatus(\n//           mappedStatus === 'COMPLETED'\n//             ? 'Payment successful!'\n//             : 'Payment submitted but not completed.'\n//         );\n//       } catch (err) {\n//         console.error('Error confirming payment:', err);\n//         setError('Failed to confirm payment to server.');\n//       }\n//     }\n//   };\n\n//   if (loading) return <p className=\"text-center text-white mt-10\">Loading...</p>;\n//   if (error) return <p className=\"text-center text-red-500 mt-10\">{error}</p>;\n\n//   return (\n//     <div\n//       className=\"flex justify-center items-center min-h-screen w-full px-4\"\n//       style={{\n//         padding: \"20px\",\n//         backgroundImage: `url(\"/artist.png\")`,\n//         backgroundSize: \"100% 100%\",\n//         backgroundRepeat: \"no-repeat\",\n//         backgroundPosition: \"center\",\n//         backgroundAttachment: \"fixed\",\n//         minHeight: \"100vh\",\n//         width: \"100vw\",\n//         overflowX: \"hidden\",\n//       }}\n//     >\n//       <div className=\"w-full max-w-md bg-black bg-opacity-70 rounded-2xl shadow-xl p-8\">\n//         <h2 style={{ color: 'white', fontSize: '24px', marginBottom: '20px' }}>Order Payment</h2>\n\n//         <div style={{ padding: '10px', marginBottom: '20px' }}>\n//           <p style={{ color: 'white' }}>\n//             <strong>Transaction ID:</strong> {payment.transactionId}\n//           </p>\n//           <p style={{ color: 'white' }}>\n//             <strong>Amount:</strong> â‚¹{payment.amount}\n//           </p>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"p-4 border border-gray-300 rounded-md mb-4 bg-white\">\n//             <CardElement options={CARD_ELEMENT_OPTIONS} />\n//           </div>\n\n//           <button\n//             type=\"submit\"\n//             disabled={!stripe || !elements}\n//             className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-200\"\n//           >\n//             Pay Now\n//           </button>\n//         </form>\n\n//         {paymentStatus && (\n//           <p className=\"mt-4 text-center text-green-400 font-semibold\">{paymentStatus}</p>\n//         )}\n\n//         {paymentStatus === 'Payment successful!' && payment?.downloadUrl && (\n//           <div style={{ marginTop: '24px', textAlign: 'center' }}>\n//           <a\n//             href={downloadUrl}\n//             download\n//             style={{\n//               display: 'inline-block',\n//               backgroundColor: '#16a34a',\n//               color: '#fff',\n//               fontWeight: 'bold',\n//               padding: '10px 24px',\n//               borderRadius: '8px',\n//               textDecoration: 'none',\n//               transition: 'background-color 0.2s ease-in-out'\n//             }}\n\n//           >\n//             Download Artwork\n//           </a>\n//         </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderDetails;\n// OrderDetails.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      fontSize: '16px',\n      color: '#32325d',\n      '::placeholder': {\n        color: '#a0aec0'\n      }\n    },\n    invalid: {\n      color: '#e53e3e'\n    }\n  }\n};\nconst OrderDetails = () => {\n  const {\n    orderId\n  } = useParams();\n  const stripe = useStripe();\n  const elements = useElements();\n  const token = localStorage.getItem('token');\n  const [payment, setPayment] = useState(null);\n  const [clientSecret, setClientSecret] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [paymentStatus, setPaymentStatus] = useState('');\n  const [error, setError] = useState('');\n  const [downloadUrl, setDownloadUrl] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const intentRes = await axios.post('http://localhost:8080/api/payments/create-payment-intent', {\n          orderId: Number(orderId)\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setClientSecret(intentRes.data.clientSecret);\n        const paymentRes = await axios.get(`http://localhost:8080/api/payments/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPayment(paymentRes.data);\n        setLoading(false);\n      } catch (err) {\n        var _err$response;\n        console.error('Error loading payment details:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        setError('Something went wrong while fetching payment details.');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [orderId, token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements || !clientSecret) return;\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (result.error) {\n      console.error(result.error.message);\n      setError(result.error.message);\n    } else {\n      const status = result.paymentIntent.status;\n      const mappedStatus = status === 'succeeded' ? 'COMPLETED' : 'FAILED';\n      try {\n        await axios.post('http://localhost:8080/api/payments/confirm', {\n          transactionId: result.paymentIntent.id,\n          status: mappedStatus\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (mappedStatus === 'COMPLETED') {\n          setPaymentStatus('Payment successful!');\n        } else {\n          setPaymentStatus('Payment failed. Try again.');\n        }\n      } catch (err) {\n        var _err$response2;\n        console.error('Error confirming payment:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n        setError('Failed to confirm payment.');\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchDownloadUrl = async () => {\n      if (!(payment === null || payment === void 0 ? void 0 : payment.artworkId)) {\n        console.error('Missing artworkId');\n        return;\n      }\n      console.log('Token:', token);\n      console.log('Artwork ID:', payment.artworkId);\n      try {\n        const res = await axios.get(`http://localhost:8080/api/artworks/download/${payment.artworkId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (res.data.downloadUrl) {\n          setDownloadUrl(res.data.downloadUrl);\n        } else {\n          setError('Download URL not found.');\n        }\n      } catch (err) {\n        var _err$response3, _err$response4, _err$response4$data;\n        console.error('Error fetching download URL:', ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n        setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Unable to fetch download link.');\n      }\n    };\n    if (paymentStatus === 'Payment successful!' && payment) {\n      fetchDownloadUrl();\n    }\n  }, [paymentStatus, payment]);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center text-white mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center text-red-500 mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center items-center min-h-screen px-4\",\n    style: {\n      padding: '20px',\n      backgroundImage: `url(\"/artist.png\")`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full max-w-md bg-black bg-opacity-80 rounded-2xl shadow-xl p-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-white text-2xl mb-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, \"Order Payment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-white mb-4 space-y-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, \"Transaction ID:\"), \" \", payment.transactionId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, \"Amount:\"), \" \\u20B9\", payment.amount)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 border border-gray-300 rounded-md mb-4 bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    options: CARD_ELEMENT_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe || !elements,\n    className: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, \"Pay Now\")), paymentStatus && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-4 text-center font-semibold\",\n    style: {\n      color: '#22c55e'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }, paymentStatus), paymentStatus === 'Payment successful!' && downloadUrl && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: downloadUrl,\n    download: true,\n    className: \"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, \"Download Artwork\"))));\n};\nexport default OrderDetails;","map":{"version":3,"names":["React","useState","useEffect","useParams","useStripe","useElements","CardElement","axios","CARD_ELEMENT_OPTIONS","style","base","fontSize","color","invalid","OrderDetails","orderId","stripe","elements","token","localStorage","getItem","payment","setPayment","clientSecret","setClientSecret","loading","setLoading","paymentStatus","setPaymentStatus","error","setError","downloadUrl","setDownloadUrl","fetchData","intentRes","post","Number","headers","Authorization","data","paymentRes","get","err","_err$response","console","response","message","handleSubmit","e","preventDefault","result","confirmCardPayment","payment_method","card","getElement","status","paymentIntent","mappedStatus","transactionId","id","_err$response2","fetchDownloadUrl","artworkId","log","res","_err$response3","_err$response4","_err$response4$data","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","padding","backgroundImage","backgroundSize","backgroundPosition","amount","onSubmit","options","type","disabled","href","download"],"sources":["C:/Users/Pallavi/Desktop/React/firstapp/src/components/userboard/OrderDetails.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\n// import axios from 'axios';\r\n\r\n// const CARD_ELEMENT_OPTIONS = {\r\n//   style: {\r\n//     base: {\r\n//       fontSize: '16px',\r\n//       color: '#32325d',\r\n//       '::placeholder': {\r\n//         color: '#a0aec0',\r\n//       },\r\n//     },\r\n//     invalid: {\r\n//       color: '#e53e3e',\r\n//     },\r\n//   },\r\n// };\r\n\r\n// const OrderDetails = () => {\r\n//   const { orderId } = useParams();\r\n//   const numericOrderId = Number(orderId);\r\n//   const stripe = useStripe();\r\n//   const elements = useElements();\r\n\r\n//   const [payment, setPayment] = useState(null);\r\n//   const [clientSecret, setClientSecret] = useState('');\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [paymentStatus, setPaymentStatus] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     const fetchPaymentIntentAndDetails = async () => {\r\n//       try {\r\n//         const intentRes = await axios.post(\r\n//           'http://localhost:8080/api/payments/create-payment-intent',\r\n//           { orderId: numericOrderId },\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setClientSecret(intentRes.data.clientSecret);\r\n\r\n//         const paymentRes = await axios.get(\r\n//           `http://localhost:8080/api/payments/${orderId}`,\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setPayment(paymentRes.data);\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         console.error('Error during payment setup:', err);\r\n//         setError(\r\n//           err.response?.status === 403\r\n//             ? 'You are not authorized to view this order.'\r\n//             : 'Something went wrong. Please try again later.'\r\n//         );\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchPaymentIntentAndDetails();\r\n//   }, [orderId, token]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!stripe || !elements) return;\r\n\r\n//     const result = await stripe.confirmCardPayment(clientSecret, {\r\n//       payment_method: {\r\n//         card: elements.getElement(CardElement),\r\n//       },\r\n//     });\r\n\r\n//     if (result.error) {\r\n//       setError(result.error.message);\r\n//     } else {\r\n//       const status = result.paymentIntent.status;\r\n//       const mappedStatus =\r\n//         status === 'succeeded'\r\n//           ? 'COMPLETED'\r\n//           : status === 'processing'\r\n//           ? 'PENDING'\r\n//           : 'FAILED';\r\n\r\n//       try {\r\n//         await axios.post(\r\n//           'http://localhost:8080/api/payments/confirm',\r\n//           {\r\n//             transactionId: result.paymentIntent.id,\r\n//             status: mappedStatus,\r\n//           },\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         setPaymentStatus(\r\n//           mappedStatus === 'COMPLETED'\r\n//             ? 'Payment successful!'\r\n//             : 'Payment submitted but not completed.'\r\n//         );\r\n//       } catch (err) {\r\n//         console.error('Error confirming payment:', err);\r\n//         setError('Failed to confirm payment to server.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p className=\"text-center text-white mt-10\">Loading...</p>;\r\n//   if (error) return <p className=\"text-center text-red-500 mt-10\">{error}</p>;\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"flex justify-center items-center min-h-screen w-full px-4\"\r\n//       style={{\r\n//         padding: \"20px\",\r\n//         backgroundImage: `url(\"/artist.png\")`,\r\n//         backgroundSize: \"100% 100%\",\r\n//         backgroundRepeat: \"no-repeat\",\r\n//         backgroundPosition: \"center\",\r\n//         backgroundAttachment: \"fixed\",\r\n//         minHeight: \"100vh\",\r\n//         width: \"100vw\",\r\n//         overflowX: \"hidden\",\r\n//       }}\r\n//     >\r\n//       <div className=\"w-full max-w-md bg-black bg-opacity-70 rounded-2xl shadow-xl p-8\">\r\n//         <h2 style={{ color: 'white', fontSize: '24px', marginBottom: '20px' }}>Order Payment</h2>\r\n  \r\n//         <div style={{ padding: '10px', marginBottom: '20px' }}>\r\n//           <p style={{ color: 'white' }}>\r\n//             <strong>Transaction ID:</strong> {payment.transactionId}\r\n//           </p>\r\n//           <p style={{ color: 'white' }}>\r\n//             <strong>Amount:</strong> â‚¹{payment.amount}\r\n//           </p>\r\n//         </div>\r\n  \r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"p-4 border border-gray-300 rounded-md mb-4 bg-white\">\r\n//             <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n//           </div>\r\n  \r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!stripe || !elements}\r\n//             className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-200\"\r\n//           >\r\n//             Pay Now\r\n//           </button>\r\n//         </form>\r\n  \r\n//         {paymentStatus && (\r\n//           <p className=\"mt-4 text-center text-green-400 font-semibold\">{paymentStatus}</p>\r\n//         )}\r\n  \r\n//         {paymentStatus === 'Payment successful!' && payment?.downloadUrl && (\r\n//           <div style={{ marginTop: '24px', textAlign: 'center' }}>\r\n//           <a\r\n//             href={downloadUrl}\r\n//             download\r\n//             style={{\r\n//               display: 'inline-block',\r\n//               backgroundColor: '#16a34a',\r\n//               color: '#fff',\r\n//               fontWeight: 'bold',\r\n//               padding: '10px 24px',\r\n//               borderRadius: '8px',\r\n//               textDecoration: 'none',\r\n//               transition: 'background-color 0.2s ease-in-out'\r\n//             }}\r\n            \r\n//           >\r\n//             Download Artwork\r\n//           </a>\r\n//         </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OrderDetails;\r\n// OrderDetails.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      fontSize: '16px',\r\n      color: '#32325d',\r\n      '::placeholder': {\r\n        color: '#a0aec0',\r\n      },\r\n    },\r\n    invalid: {\r\n      color: '#e53e3e',\r\n    },\r\n  },\r\n};\r\n\r\nconst OrderDetails = () => {\r\n  const { orderId } = useParams();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const token = localStorage.getItem('token');\r\n\r\n  const [payment, setPayment] = useState(null);\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [paymentStatus, setPaymentStatus] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [downloadUrl, setDownloadUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const intentRes = await axios.post(\r\n          'http://localhost:8080/api/payments/create-payment-intent',\r\n          { orderId: Number(orderId) },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        setClientSecret(intentRes.data.clientSecret);\r\n\r\n        const paymentRes = await axios.get(\r\n          `http://localhost:8080/api/payments/${orderId}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        setPayment(paymentRes.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error loading payment details:', err.response?.data || err.message);\r\n        setError('Something went wrong while fetching payment details.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [orderId, token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements || !clientSecret) return;\r\n\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      },\r\n    });\r\n\r\n    if (result.error) {\r\n      console.error(result.error.message);\r\n      setError(result.error.message);\r\n    } else {\r\n      const status = result.paymentIntent.status;\r\n      const mappedStatus = status === 'succeeded' ? 'COMPLETED' : 'FAILED';\r\n\r\n      try {\r\n        await axios.post(\r\n          'http://localhost:8080/api/payments/confirm',\r\n          {\r\n            transactionId: result.paymentIntent.id,\r\n            status: mappedStatus,\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        if (mappedStatus === 'COMPLETED') {\r\n          setPaymentStatus('Payment successful!');\r\n        } else {\r\n          setPaymentStatus('Payment failed. Try again.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error confirming payment:', err.response?.data || err.message);\r\n        setError('Failed to confirm payment.');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDownloadUrl = async () => {\r\n      if (!payment?.artworkId) {\r\n        console.error('Missing artworkId');\r\n        return;\r\n      }\r\n\r\n      console.log('Token:', token);\r\n      console.log('Artwork ID:', payment.artworkId);\r\n\r\n      try {\r\n        const res = await axios.get(\r\n          `http://localhost:8080/api/artworks/download/${payment.artworkId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        if (res.data.downloadUrl) {\r\n          setDownloadUrl(res.data.downloadUrl);\r\n        } else {\r\n          setError('Download URL not found.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching download URL:', err.response?.data || err.message);\r\n        setError(err.response?.data?.message || 'Unable to fetch download link.');\r\n      }\r\n    };\r\n\r\n    if (paymentStatus === 'Payment successful!' && payment) {\r\n      fetchDownloadUrl();\r\n    }\r\n  }, [paymentStatus, payment]);\r\n\r\n  if (loading) return <p className=\"text-center text-white mt-10\">Loading...</p>;\r\n  if (error) return <p className=\"text-center text-red-500 mt-10\">{error}</p>;\r\n\r\n  return (\r\n    <div\r\n      className=\"flex justify-center items-center min-h-screen px-4\"\r\n      style={{\r\n        padding: '20px',\r\n        backgroundImage: `url(\"/artist.png\")`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n      }}\r\n    >\r\n      <div className=\"w-full max-w-md bg-black bg-opacity-80 rounded-2xl shadow-xl p-8\">\r\n        <h2 className=\"text-white text-2xl mb-4 text-center\">Order Payment</h2>\r\n\r\n        <div className=\"text-white mb-4 space-y-2\">\r\n          <p>\r\n            <strong>Transaction ID:</strong> {payment.transactionId}\r\n          </p>\r\n          <p>\r\n            <strong>Amount:</strong> â‚¹{payment.amount}\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"p-4 border border-gray-300 rounded-md mb-4 bg-white\">\r\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!stripe || !elements}\r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n            Pay Now\r\n          </button>\r\n        </form>\r\n\r\n        {paymentStatus && (\r\n          <p className=\"mt-4 text-center font-semibold\" style={{ color: '#22c55e' }}>\r\n            {paymentStatus}\r\n          </p>\r\n        )}\r\n\r\n        {paymentStatus === 'Payment successful!' && downloadUrl && (\r\n          <div className=\"text-center mt-6\">\r\n            <a\r\n              href={downloadUrl}\r\n              download\r\n              className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded inline-block\"\r\n            >\r\n              Download Artwork\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}