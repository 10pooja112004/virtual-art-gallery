{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pallavi\\\\Desktop\\\\React\\\\firstapp\\\\src\\\\components\\\\auth\\\\Login.js\";\n// import React, { useState } from \"react\";\n// import { \n//   Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \n// } from \"@mui/material\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";  // ‚úÖ Correct for React Router v5\n\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \n//   const history = useHistory();  // ‚úÖ Correct usage\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"üîµ Sending Data:\", formData);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//         withCredentials: true,\n//       });\n\n//       console.log(\"üü¢ Full Response:\", response);\n//       console.log(\"üü¢ Response Data:\", JSON.stringify(response.data, null, 2)); // ‚úÖ Log full response data\n\n//       const { token, role } = response.data; // ‚úÖ Extract token & role\n\n//       // ‚úÖ Only check for `role` if it's present in API response\n//       if (token) {  \n//         localStorage.setItem(\"token\", token);\n//         localStorage.setItem(\"username\", formData.username);\n\n//         if (role) {\n//           localStorage.setItem(\"role\", role);\n//         }\n\n//         onLogin(token);\n//         setMessage({ text: \"‚úÖ Login successful! Redirecting...\", type: \"success\" });\n//         setSnackbarOpen(true);\n\n//         setTimeout(() => {\n//           history.push(role?.toLowerCase() === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\");\n\n//         }, 1500);\n//       } else {\n//         console.error(\"‚ùå API did not return token. Response Data:\", response.data);\n//         setMessage({ text: \"‚ùå Login failed. No token received.\", type: \"error\" });\n//         setSnackbarOpen(true);\n//       }\n//     } catch (error) {\n//       console.error(\"üî¥ Full API Error:\", error);\n\n//       if (error.response) {\n//         console.log(\"üî¥ Error Response Data:\", error.response.data);\n//         setMessage({ text: error.response.data?.message || \"‚ùå Invalid username or password\", type: \"error\" });\n//       } else if (error.request) {\n//         setMessage({ text: \"‚ö†Ô∏è Server not responding. Try again later.\", type: \"error\" });\n//       } else {\n//         setMessage({ text: \"‚ùå Request failed. Check network.\", type: \"error\" });\n//       }\n//       setSnackbarOpen(true);\n//     }\n//   };\n\n//   // ‚úÖ Handle Logout Function (Fixing 'handleLogout' not defined error)\n//   // const handleLogout = () => {\n//   //   localStorage.removeItem(\"token\");\n//   //   localStorage.removeItem(\"role\");\n//   //   localStorage.removeItem(\"username\");\n//   //   history.push(\"/login\");\n//   // };\n\n//   return (\n//     <Dialog open={open} onClose={onClose}>\n//       <DialogTitle>\n//         Login\n//         <IconButton\n//           aria-label=\"close\"\n//           onClick={onClose}\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\n//         >\n//           <CloseIcon />\n//         </IconButton>\n//       </DialogTitle>\n//       <DialogContent>\n//         <TextField \n//           label=\"Username\" \n//           name=\"username\" \n//           type=\"text\" \n//           fullWidth \n//           margin=\"dense\" \n//           value={formData.username} \n//           onChange={handleChange} \n//           required\n//         />\n//         <TextField \n//           label=\"Password\" \n//           name=\"password\" \n//           type=\"password\" \n//           fullWidth \n//           margin=\"dense\" \n//           value={formData.password} \n//           onChange={handleChange} \n//           required\n//         />\n//       </DialogContent>\n//       <DialogActions>\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\n//       </DialogActions>\n\n//       {/* Snackbar for Feedback */}\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\n//           {message.text}\n//         </Alert>\n//       </Snackbar>\n//     </Dialog>\n//   );\n// };\n\n// export default Login;\n// import React, { useState } from \"react\";\n// import { \n//   Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \n// } from \"@mui/material\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";  // ‚úÖ Correct for React Router v5\n\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \n//   const history = useHistory();  // ‚úÖ Correct usage\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"üîµ Sending Data:\", formData);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//         withCredentials: true,\n//       });\n\n//       console.log(\"üü¢ Full Response:\", response);\n//       console.log(\"üü¢ Response Data:\", JSON.stringify(response.data, null, 2)); // ‚úÖ Log full response data\n\n//       const { token, role } = response.data; // ‚úÖ Extract token & role\n\n//       if (token) {  \n//         localStorage.setItem(\"token\", token);\n//         localStorage.setItem(\"username\", formData.username);\n\n//         if (role) {\n//           localStorage.setItem(\"role\", role);\n//         }\n\n//         console.log(\"üîÄ Redirecting based on role:\", role);\n\n//         onLogin(token);\n//         setMessage({ text: \"‚úÖ Login successful! Redirecting...\", type: \"success\" });\n//         setSnackbarOpen(true);\n\n//         setTimeout(() => {\n//           if (role && role.toLowerCase() === \"artist\") {\n//             console.log(\"üé® Redirecting to /artist-dashboard\");\n//             history.push(\"/artist-dashboard\");\n//           } else {\n//             console.log(\"üè† Redirecting to /dashboard\");\n//             history.push(\"/dashboard\");\n//           }\n//         }, 1500);\n//       } else {\n//         console.error(\"‚ùå API did not return token. Response Data:\", response.data);\n//         setMessage({ text: \"‚ùå Login failed. No token received.\", type: \"error\" });\n//         setSnackbarOpen(true);\n//       }\n//     } catch (error) {\n//       console.error(\"üî¥ Full API Error:\", error);\n\n//       if (error.response) {\n//         console.log(\"üî¥ Error Response Data:\", error.response.data);\n//         setMessage({ text: error.response.data?.message || \"‚ùå Invalid username or password\", type: \"error\" });\n//       } else if (error.request) {\n//         setMessage({ text: \"‚ö†Ô∏è Server not responding. Try again later.\", type: \"error\" });\n//       } else {\n//         setMessage({ text: \"‚ùå Request failed. Check network.\", type: \"error\" });\n//       }\n//       setSnackbarOpen(true);\n//     }\n//   };\n\n//   return (\n//     <Dialog open={open} onClose={onClose}>\n//       <DialogTitle>\n//         Login\n//         <IconButton\n//           aria-label=\"close\"\n//           onClick={onClose}\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\n//         >\n//           <CloseIcon />\n//         </IconButton>\n//       </DialogTitle>\n//       <DialogContent>\n//         <TextField \n//           label=\"Username\" \n//           name=\"username\" \n//           type=\"text\" \n//           fullWidth \n//           margin=\"dense\" \n//           value={formData.username} \n//           onChange={handleChange} \n//           required\n//         />\n//         <TextField \n//           label=\"Password\" \n//           name=\"password\" \n//           type=\"password\" \n//           fullWidth \n//           margin=\"dense\" \n//           value={formData.password} \n//           onChange={handleChange} \n//           required\n//         />\n//       </DialogContent>\n//       <DialogActions>\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\n//       </DialogActions>\n\n//       {/* Snackbar for Feedback */}\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\n//           {message.text}\n//         </Alert>\n//       </Snackbar>\n//     </Dialog>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"; // ‚úÖ React Router v5\n\nconst Login = ({\n  open = false,\n  onClose = () => {},\n  onLogin = () => {}\n}) => {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState({\n    text: \"\",\n    type: \"error\"\n  });\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"üîµ Sending Data:\", formData);\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      console.log(\"üü¢ Full Response:\", response);\n      console.log(\"üü¢ Response Data:\", JSON.stringify(response.data, null, 2));\n      const {\n        token,\n        role\n      } = response.data;\n      if (token) {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", formData.username);\n        if (role) {\n          localStorage.setItem(\"role\", role);\n        }\n        console.log(\"üîÄ Redirecting based on role:\", role);\n        onLogin(token);\n        setMessage({\n          text: \"‚úÖ Login successful! Redirecting...\",\n          type: \"success\"\n        });\n        setSnackbarOpen(true);\n        setTimeout(() => {\n          onClose(); // ‚úÖ Close the login dialog\n          if (role && role.toLowerCase() === \"artist\") {\n            console.log(\"üé® Redirecting to /artist-dashboard\");\n            history.push(\"/artist-dashboard\");\n          } else {\n            console.log(\"üè† Redirecting to /dashboard\");\n            history.push(\"/dashboard\");\n          }\n        }, 1500);\n      } else {\n        console.error(\"‚ùå API did not return token. Response Data:\", response.data);\n        setMessage({\n          text: \"‚ùå Login failed. No token received.\",\n          type: \"error\"\n        });\n        setSnackbarOpen(true);\n      }\n    } catch (error) {\n      console.error(\"üî¥ Full API Error:\", error);\n      if (error.response) {\n        var _error$response$data;\n        console.log(\"üî¥ Error Response Data:\", error.response.data);\n        setMessage({\n          text: ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"‚ùå Invalid username or password\",\n          type: \"error\"\n        });\n      } else if (error.request) {\n        setMessage({\n          text: \"‚ö†Ô∏è Server not responding. Try again later.\",\n          type: \"error\"\n        });\n      } else {\n        setMessage({\n          text: \"‚ùå Request failed. Check network.\",\n          type: \"error\"\n        });\n      }\n      setSnackbarOpen(true);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, \"Login\", /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    onClick: onClose,\n    sx: {\n      position: \"absolute\",\n      right: 8,\n      top: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Username\",\n    name: \"username\",\n    type: \"text\",\n    fullWidth: true,\n    margin: \"dense\",\n    value: formData.username,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    fullWidth: true,\n    margin: \"dense\",\n    value: formData.password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackbarOpen,\n    autoHideDuration: 3000,\n    onClose: () => setSnackbarOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: () => setSnackbarOpen(false),\n    severity: message.type,\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, message.text)));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","IconButton","Snackbar","Alert","CloseIcon","axios","useHistory","Login","open","onClose","onLogin","history","formData","setFormData","username","password","message","setMessage","text","type","snackbarOpen","setSnackbarOpen","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","response","post","headers","withCredentials","JSON","stringify","data","token","role","localStorage","setItem","setTimeout","toLowerCase","push","error","_error$response$data","request","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","position","right","top","label","fullWidth","margin","onChange","required","color","variant","autoHideDuration","severity","width"],"sources":["C:/Users/Pallavi/Desktop/React/firstapp/src/components/auth/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { \r\n//   Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \r\n// } from \"@mui/material\";\r\n// import CloseIcon from \"@mui/icons-material/Close\";\r\n// import axios from \"axios\";\r\n// import { useHistory } from \"react-router-dom\";  // ‚úÖ Correct for React Router v5\r\n\r\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \r\n//   const history = useHistory();  // ‚úÖ Correct usage\r\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\r\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"üîµ Sending Data:\", formData);\r\n  \r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         withCredentials: true,\r\n//       });\r\n  \r\n//       console.log(\"üü¢ Full Response:\", response);\r\n//       console.log(\"üü¢ Response Data:\", JSON.stringify(response.data, null, 2)); // ‚úÖ Log full response data\r\n  \r\n//       const { token, role } = response.data; // ‚úÖ Extract token & role\r\n  \r\n//       // ‚úÖ Only check for `role` if it's present in API response\r\n//       if (token) {  \r\n//         localStorage.setItem(\"token\", token);\r\n//         localStorage.setItem(\"username\", formData.username);\r\n  \r\n//         if (role) {\r\n//           localStorage.setItem(\"role\", role);\r\n//         }\r\n  \r\n//         onLogin(token);\r\n//         setMessage({ text: \"‚úÖ Login successful! Redirecting...\", type: \"success\" });\r\n//         setSnackbarOpen(true);\r\n  \r\n//         setTimeout(() => {\r\n//           history.push(role?.toLowerCase() === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\");\r\n\r\n//         }, 1500);\r\n//       } else {\r\n//         console.error(\"‚ùå API did not return token. Response Data:\", response.data);\r\n//         setMessage({ text: \"‚ùå Login failed. No token received.\", type: \"error\" });\r\n//         setSnackbarOpen(true);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"üî¥ Full API Error:\", error);\r\n  \r\n//       if (error.response) {\r\n//         console.log(\"üî¥ Error Response Data:\", error.response.data);\r\n//         setMessage({ text: error.response.data?.message || \"‚ùå Invalid username or password\", type: \"error\" });\r\n//       } else if (error.request) {\r\n//         setMessage({ text: \"‚ö†Ô∏è Server not responding. Try again later.\", type: \"error\" });\r\n//       } else {\r\n//         setMessage({ text: \"‚ùå Request failed. Check network.\", type: \"error\" });\r\n//       }\r\n//       setSnackbarOpen(true);\r\n//     }\r\n//   };\r\n  \r\n  \r\n  \r\n    \r\n//   // ‚úÖ Handle Logout Function (Fixing 'handleLogout' not defined error)\r\n//   // const handleLogout = () => {\r\n//   //   localStorage.removeItem(\"token\");\r\n//   //   localStorage.removeItem(\"role\");\r\n//   //   localStorage.removeItem(\"username\");\r\n//   //   history.push(\"/login\");\r\n//   // };\r\n\r\n//   return (\r\n//     <Dialog open={open} onClose={onClose}>\r\n//       <DialogTitle>\r\n//         Login\r\n//         <IconButton\r\n//           aria-label=\"close\"\r\n//           onClick={onClose}\r\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\r\n//         >\r\n//           <CloseIcon />\r\n//         </IconButton>\r\n//       </DialogTitle>\r\n//       <DialogContent>\r\n//         <TextField \r\n//           label=\"Username\" \r\n//           name=\"username\" \r\n//           type=\"text\" \r\n//           fullWidth \r\n//           margin=\"dense\" \r\n//           value={formData.username} \r\n//           onChange={handleChange} \r\n//           required\r\n//         />\r\n//         <TextField \r\n//           label=\"Password\" \r\n//           name=\"password\" \r\n//           type=\"password\" \r\n//           fullWidth \r\n//           margin=\"dense\" \r\n//           value={formData.password} \r\n//           onChange={handleChange} \r\n//           required\r\n//         />\r\n//       </DialogContent>\r\n//       <DialogActions>\r\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\r\n//       </DialogActions>\r\n\r\n//       {/* Snackbar for Feedback */}\r\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\r\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\r\n//           {message.text}\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </Dialog>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n// import React, { useState } from \"react\";\r\n// import { \r\n//   Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \r\n// } from \"@mui/material\";\r\n// import CloseIcon from \"@mui/icons-material/Close\";\r\n// import axios from \"axios\";\r\n// import { useHistory } from \"react-router-dom\";  // ‚úÖ Correct for React Router v5\r\n\r\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \r\n//   const history = useHistory();  // ‚úÖ Correct usage\r\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\r\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"üîµ Sending Data:\", formData);\r\n  \r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         withCredentials: true,\r\n//       });\r\n  \r\n//       console.log(\"üü¢ Full Response:\", response);\r\n//       console.log(\"üü¢ Response Data:\", JSON.stringify(response.data, null, 2)); // ‚úÖ Log full response data\r\n  \r\n//       const { token, role } = response.data; // ‚úÖ Extract token & role\r\n  \r\n//       if (token) {  \r\n//         localStorage.setItem(\"token\", token);\r\n//         localStorage.setItem(\"username\", formData.username);\r\n  \r\n//         if (role) {\r\n//           localStorage.setItem(\"role\", role);\r\n//         }\r\n\r\n//         console.log(\"üîÄ Redirecting based on role:\", role);\r\n\r\n//         onLogin(token);\r\n//         setMessage({ text: \"‚úÖ Login successful! Redirecting...\", type: \"success\" });\r\n//         setSnackbarOpen(true);\r\n\r\n//         setTimeout(() => {\r\n//           if (role && role.toLowerCase() === \"artist\") {\r\n//             console.log(\"üé® Redirecting to /artist-dashboard\");\r\n//             history.push(\"/artist-dashboard\");\r\n//           } else {\r\n//             console.log(\"üè† Redirecting to /dashboard\");\r\n//             history.push(\"/dashboard\");\r\n//           }\r\n//         }, 1500);\r\n//       } else {\r\n//         console.error(\"‚ùå API did not return token. Response Data:\", response.data);\r\n//         setMessage({ text: \"‚ùå Login failed. No token received.\", type: \"error\" });\r\n//         setSnackbarOpen(true);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"üî¥ Full API Error:\", error);\r\n  \r\n//       if (error.response) {\r\n//         console.log(\"üî¥ Error Response Data:\", error.response.data);\r\n//         setMessage({ text: error.response.data?.message || \"‚ùå Invalid username or password\", type: \"error\" });\r\n//       } else if (error.request) {\r\n//         setMessage({ text: \"‚ö†Ô∏è Server not responding. Try again later.\", type: \"error\" });\r\n//       } else {\r\n//         setMessage({ text: \"‚ùå Request failed. Check network.\", type: \"error\" });\r\n//       }\r\n//       setSnackbarOpen(true);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Dialog open={open} onClose={onClose}>\r\n//       <DialogTitle>\r\n//         Login\r\n//         <IconButton\r\n//           aria-label=\"close\"\r\n//           onClick={onClose}\r\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\r\n//         >\r\n//           <CloseIcon />\r\n//         </IconButton>\r\n//       </DialogTitle>\r\n//       <DialogContent>\r\n//         <TextField \r\n//           label=\"Username\" \r\n//           name=\"username\" \r\n//           type=\"text\" \r\n//           fullWidth \r\n//           margin=\"dense\" \r\n//           value={formData.username} \r\n//           onChange={handleChange} \r\n//           required\r\n//         />\r\n//         <TextField \r\n//           label=\"Password\" \r\n//           name=\"password\" \r\n//           type=\"password\" \r\n//           fullWidth \r\n//           margin=\"dense\" \r\n//           value={formData.password} \r\n//           onChange={handleChange} \r\n//           required\r\n//         />\r\n//       </DialogContent>\r\n//       <DialogActions>\r\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\r\n//       </DialogActions>\r\n\r\n//       {/* Snackbar for Feedback */}\r\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\r\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\r\n//           {message.text}\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </Dialog>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { useState } from \"react\";\r\nimport { \r\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";  // ‚úÖ React Router v5\r\n\r\nconst Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \r\n  const history = useHistory();  \r\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n  const [message, setMessage] = useState({ text: \"\", type: \"error\" });\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"üîµ Sending Data:\", formData);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        withCredentials: true,\r\n      });\r\n\r\n      console.log(\"üü¢ Full Response:\", response);\r\n      console.log(\"üü¢ Response Data:\", JSON.stringify(response.data, null, 2));\r\n\r\n      const { token, role } = response.data;\r\n\r\n      if (token) {\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"username\", formData.username);\r\n        if (role) {\r\n          localStorage.setItem(\"role\", role);\r\n        }\r\n\r\n        console.log(\"üîÄ Redirecting based on role:\", role);\r\n        onLogin(token);\r\n        setMessage({ text: \"‚úÖ Login successful! Redirecting...\", type: \"success\" });\r\n        setSnackbarOpen(true);\r\n\r\n        setTimeout(() => {\r\n          onClose();  // ‚úÖ Close the login dialog\r\n          if (role && role.toLowerCase() === \"artist\") {\r\n            console.log(\"üé® Redirecting to /artist-dashboard\");\r\n            history.push(\"/artist-dashboard\");\r\n          } else {\r\n            console.log(\"üè† Redirecting to /dashboard\");\r\n            history.push(\"/dashboard\");\r\n          }\r\n        }, 1500);\r\n      } else {\r\n        console.error(\"‚ùå API did not return token. Response Data:\", response.data);\r\n        setMessage({ text: \"‚ùå Login failed. No token received.\", type: \"error\" });\r\n        setSnackbarOpen(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"üî¥ Full API Error:\", error);\r\n\r\n      if (error.response) {\r\n        console.log(\"üî¥ Error Response Data:\", error.response.data);\r\n        setMessage({ text: error.response.data?.message || \"‚ùå Invalid username or password\", type: \"error\" });\r\n      } else if (error.request) {\r\n        setMessage({ text: \"‚ö†Ô∏è Server not responding. Try again later.\", type: \"error\" });\r\n      } else {\r\n        setMessage({ text: \"‚ùå Request failed. Check network.\", type: \"error\" });\r\n      }\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose}>\r\n      <DialogTitle>\r\n        Login\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{ position: \"absolute\", right: 8, top: 8 }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <TextField \r\n          label=\"Username\" \r\n          name=\"username\" \r\n          type=\"text\" \r\n          fullWidth \r\n          margin=\"dense\" \r\n          value={formData.username} \r\n          onChange={handleChange} \r\n          required\r\n        />\r\n        <TextField \r\n          label=\"Password\" \r\n          name=\"password\" \r\n          type=\"password\" \r\n          fullWidth \r\n          margin=\"dense\" \r\n          value={formData.password} \r\n          onChange={handleChange} \r\n          required\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n        <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\r\n      </DialogActions>\r\n\r\n      {/* Snackbar for Feedback */}\r\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\r\n        <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\r\n          {message.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,KAAK,QAC5F,eAAe;AACtB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAE;;AAEhD,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI,GAAG,KAAK;EAAEC,OAAO,GAAGA,CAAA,KAAM,CAAC,CAAC;EAAEC,OAAO,GAAGA,CAAA,KAAM,CAAC;AAAE,CAAC,KAAK;EAC1E,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC;IAAEwB,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAAC;EACnE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM4B,YAAY,GAAIC,CAAC,IAAK;IAC1BV,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACW,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAElB,QAAQ,CAAC;IAEzC,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,uCAAuC,EAAEpB,QAAQ,EAAE;QACnFqB,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,eAAe,EAAE;MACnB,CAAC,CAAC;MAEFL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;MAC1CF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACM,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAExE,MAAM;QAAEC,KAAK;QAAEC;MAAK,CAAC,GAAGR,QAAQ,CAACM,IAAI;MAErC,IAAIC,KAAK,EAAE;QACTE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;QACpCE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE7B,QAAQ,CAACE,QAAQ,CAAC;QACnD,IAAIyB,IAAI,EAAE;UACRC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,IAAI,CAAC;QACpC;QAEAV,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAES,IAAI,CAAC;QAClD7B,OAAO,CAAC4B,KAAK,CAAC;QACdrB,UAAU,CAAC;UAAEC,IAAI,EAAE,oCAAoC;UAAEC,IAAI,EAAE;QAAU,CAAC,CAAC;QAC3EE,eAAe,CAAC,IAAI,CAAC;QAErBqB,UAAU,CAAC,MAAM;UACfjC,OAAO,CAAC,CAAC,CAAC,CAAE;UACZ,IAAI8B,IAAI,IAAIA,IAAI,CAACI,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAE;YAC3Cd,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;YAClDnB,OAAO,CAACiC,IAAI,CAAC,mBAAmB,CAAC;UACnC,CAAC,MAAM;YACLf,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC3CnB,OAAO,CAACiC,IAAI,CAAC,YAAY,CAAC;UAC5B;QACF,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACLf,OAAO,CAACgB,KAAK,CAAC,4CAA4C,EAAEd,QAAQ,CAACM,IAAI,CAAC;QAC1EpB,UAAU,CAAC;UAAEC,IAAI,EAAE,oCAAoC;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;QACzEE,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAE1C,IAAIA,KAAK,CAACd,QAAQ,EAAE;QAAA,IAAAe,oBAAA;QAClBjB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEe,KAAK,CAACd,QAAQ,CAACM,IAAI,CAAC;QAC3DpB,UAAU,CAAC;UAAEC,IAAI,EAAE,EAAA4B,oBAAA,GAAAD,KAAK,CAACd,QAAQ,CAACM,IAAI,cAAAS,oBAAA,uBAAnBA,oBAAA,CAAqB9B,OAAO,KAAI,gCAAgC;UAAEG,IAAI,EAAE;QAAQ,CAAC,CAAC;MACvG,CAAC,MAAM,IAAI0B,KAAK,CAACE,OAAO,EAAE;QACxB9B,UAAU,CAAC;UAAEC,IAAI,EAAE,4CAA4C;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MACnF,CAAC,MAAM;QACLF,UAAU,CAAC;UAAEC,IAAI,EAAE,kCAAkC;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MACzE;MACAE,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,oBACE5B,KAAA,CAAAuD,aAAA,CAACrD,MAAM;IAACa,IAAI,EAAEA,IAAK;IAACC,OAAO,EAAEA,OAAQ;IAAAwC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnC7D,KAAA,CAAAuD,aAAA,CAACpD,WAAW;IAAAqD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAEX,eAAA7D,KAAA,CAAAuD,aAAA,CAAC/C,UAAU;IACT,cAAW,OAAO;IAClBsD,OAAO,EAAE9C,OAAQ;IACjB+C,EAAE,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE/C7D,KAAA,CAAAuD,aAAA,CAAC5C,SAAS;IAAA6C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACF,CACD,CAAC,eACd7D,KAAA,CAAAuD,aAAA,CAACnD,aAAa;IAAAoD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACZ7D,KAAA,CAAAuD,aAAA,CAAChD,SAAS;IACR4D,KAAK,EAAC,UAAU;IAChBnC,IAAI,EAAC,UAAU;IACfN,IAAI,EAAC,MAAM;IACX0C,SAAS;IACTC,MAAM,EAAC,OAAO;IACdpC,KAAK,EAAEd,QAAQ,CAACE,QAAS;IACzBiD,QAAQ,EAAEzC,YAAa;IACvB0C,QAAQ;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF7D,KAAA,CAAAuD,aAAA,CAAChD,SAAS;IACR4D,KAAK,EAAC,UAAU;IAChBnC,IAAI,EAAC,UAAU;IACfN,IAAI,EAAC,UAAU;IACf0C,SAAS;IACTC,MAAM,EAAC,OAAO;IACdpC,KAAK,EAAEd,QAAQ,CAACG,QAAS;IACzBgD,QAAQ,EAAEzC,YAAa;IACvB0C,QAAQ;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CACY,CAAC,eAChB7D,KAAA,CAAAuD,aAAA,CAAClD,aAAa;IAAAmD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACZ7D,KAAA,CAAAuD,aAAA,CAACjD,MAAM;IAACwD,OAAO,EAAE9C,OAAQ;IAACwD,KAAK,EAAC,WAAW;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAc,CAAC,eAC3D7D,KAAA,CAAAuD,aAAA,CAACjD,MAAM;IAACwD,OAAO,EAAE5B,YAAa;IAACsC,KAAK,EAAC,SAAS;IAACC,OAAO,EAAC,WAAW;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAa,CACnE,CAAC,eAGhB7D,KAAA,CAAAuD,aAAA,CAAC9C,QAAQ;IAACM,IAAI,EAAEY,YAAa;IAAC+C,gBAAgB,EAAE,IAAK;IAAC1D,OAAO,EAAEA,CAAA,KAAMY,eAAe,CAAC,KAAK,CAAE;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1F7D,KAAA,CAAAuD,aAAA,CAAC7C,KAAK;IAACM,OAAO,EAAEA,CAAA,KAAMY,eAAe,CAAC,KAAK,CAAE;IAAC+C,QAAQ,EAAEpD,OAAO,CAACG,IAAK;IAACqC,EAAE,EAAE;MAAEa,KAAK,EAAE;IAAO,CAAE;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzFtC,OAAO,CAACE,IACJ,CACC,CACJ,CAAC;AAEb,CAAC;AAED,eAAeX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}