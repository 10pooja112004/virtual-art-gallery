{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pallavi\\\\Desktop\\\\React\\\\firstapp\\\\src\\\\components\\\\auth\\\\Login.js\";\n// import React, { useState } from \"react\";\n// import { \n//   Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \n// } from \"@mui/material\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";  // ‚úÖ Correct for React Router v5\n\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \n//   const history = useHistory();  // ‚úÖ Correct usage\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"üîµ Sending Data:\", formData);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//         withCredentials: true,\n//       });\n\n//       console.log(\"üü¢ Full Response:\", response);\n//       console.log(\"üü¢ Response Data:\", JSON.stringify(response.data, null, 2)); // ‚úÖ Log full response data\n\n//       const { token, role } = response.data; // ‚úÖ Extract token & role\n\n//       // ‚úÖ Only check for role if it's present in API response\n//       if (token) {  \n//         localStorage.setItem(\"token\", token);\n//         localStorage.setItem(\"username\", formData.username);\n\n//         if (role) {\n//           localStorage.setItem(\"role\", role);\n//         }\n\n//         onLogin(token);\n//         setMessage({ text: \"‚úÖ Login successful! Redirecting...\", type: \"success\" });\n//         setSnackbarOpen(true);\n\n//         setTimeout(() => {\n//           history.push(role?.toLowerCase() === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\");\n\n//         }, 1500);\n//       } else {\n//         console.error(\"‚ùå API did not return token. Response Data:\", response.data);\n//         setMessage({ text: \"‚ùå Login failed. No token received.\", type: \"error\" });\n//         setSnackbarOpen(true);\n//       }\n//     } catch (error) {\n//       console.error(\"üî¥ Full API Error:\", error);\n\n//       if (error.response) {\n//         console.log(\"üî¥ Error Response Data:\", error.response.data);\n//         setMessage({ text: error.response.data?.message || \"‚ùå Invalid username or password\", type: \"error\" });\n//       } else if (error.request) {\n//         setMessage({ text: \"‚ö†Ô∏è Server not responding. Try again later.\", type: \"error\" });\n//       } else {\n//         setMessage({ text: \"‚ùå Request failed. Check network.\", type: \"error\" });\n//       }\n//       setSnackbarOpen(true);\n//     }\n//   };\n\n//   // ‚úÖ Handle Logout Function (Fixing 'handleLogout' not defined error)\n//   // const handleLogout = () => {\n//   //   localStorage.removeItem(\"token\");\n//   //   localStorage.removeItem(\"role\");\n//   //   localStorage.removeItem(\"username\");\n//   //   history.push(\"/login\");\n//   // };\n\n//   return (\n//     <Dialog open={open} onClose={onClose}>\n//       <DialogTitle>\n//         Login\n//         <IconButton\n//           aria-label=\"close\"\n//           onClick={onClose}\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\n//         >\n//           <CloseIcon />\n//         </IconButton>\n//       </DialogTitle>\n//       <DialogContent>\n//         <TextField \n//           label=\"Username\" \n//           name=\"username\" \n//           type=\"text\" \n//           fullWidth \n//           margin=\"dense\" \n//           value={formData.username} \n//           onChange={handleChange} \n//           required\n//         />\n//         <TextField \n//           label=\"Password\" \n//           name=\"password\" \n//           type=\"password\" \n//           fullWidth \n//           margin=\"dense\" \n//           value={formData.password} \n//           onChange={handleChange} \n//           required\n//         />\n//       </DialogContent>\n//       <DialogActions>\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\n//       </DialogActions>\n\n//       {/* Snackbar for Feedback */}\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\n//           {message.text}\n//         </Alert>\n//       </Snackbar>\n//     </Dialog>\n//   );\n// };\n\n// export default Login;\n// import React, { useState } from \"react\";\n// import {\n//   Dialog, DialogTitle, DialogContent, DialogActions,\n//   Button, TextField, IconButton, Snackbar, Alert\n// } from \"@mui/material\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import axios from \"axios\";\n\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => {\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!formData.username || !formData.password) {\n//       setMessage({ text: \"‚ùå Please enter both username and password\", type: \"error\" });\n//       setSnackbarOpen(true);\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         withCredentials: true, // important for cookies / CORS handling\n//       });\n\n//       const { token, role } = response.data;\n//       if (token) {\n//         setMessage({ text: \"‚úÖ Login successful!\", type: \"success\" });\n//         setSnackbarOpen(true);\n//         onLogin(token, role); // pass token and role to parent component\n//       } else {\n//         setMessage({ text: \"‚ùå Login failed: No token returned\", type: \"error\" });\n//         setSnackbarOpen(true);\n//       }\n\n//     } catch (error) {\n//       console.error(\"üî¥ Login API error:\", error);\n//       const errorMsg = error?.response?.data?.message || \"‚ùå Invalid credentials or server error.\";\n//       setMessage({ text: errorMsg, type: \"error\" });\n//       setSnackbarOpen(true);\n//     }\n//   };\n\n//   return (\n//     <Dialog open={open} onClose={onClose}>\n//       <DialogTitle>\n//         Login\n//         <IconButton\n//           aria-label=\"close\"\n//           onClick={onClose}\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\n//         >\n//           <CloseIcon />\n//         </IconButton>\n//       </DialogTitle>\n//       <DialogContent>\n//         <TextField\n//           label=\"Username\"\n//           name=\"username\"\n//           type=\"text\"\n//           fullWidth\n//           margin=\"dense\"\n//           value={formData.username}\n//           onChange={handleChange}\n//           required\n//         />\n//         <TextField\n//           label=\"Password\"\n//           name=\"password\"\n//           type=\"password\"\n//           fullWidth\n//           margin=\"dense\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//       </DialogContent>\n//       <DialogActions>\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\n//       </DialogActions>\n\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\n//           {message.text}\n//         </Alert>\n//       </Snackbar>\n//     </Dialog>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport axios from \"axios\";\nconst Login = ({\n  open = false,\n  onClose = () => {},\n  onLogin = () => {}\n}) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState({\n    text: \"\",\n    type: \"error\"\n  });\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.username || !formData.password) {\n      setMessage({\n        text: \"‚ùå Please enter both username and password\",\n        type: \"error\"\n      });\n      setSnackbarOpen(true);\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true // important for cookies / CORS handling\n      });\n      const {\n        token,\n        role\n      } = response.data;\n      if (token) {\n        setMessage({\n          text: \"‚úÖ Login successful!\",\n          type: \"success\"\n        });\n        setSnackbarOpen(true);\n        onLogin(token, role); // pass token and role to parent component\n      } else {\n        setMessage({\n          text: \"‚ùå Login failed: No token returned\",\n          type: \"error\"\n        });\n        setSnackbarOpen(true);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"üî¥ Login API error:\", error);\n      const errorMsg = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"‚ùå Invalid credentials or server error.\";\n      setMessage({\n        text: errorMsg,\n        type: \"error\"\n      });\n      setSnackbarOpen(true);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, \"Login\", /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    onClick: onClose,\n    sx: {\n      position: \"absolute\",\n      right: 8,\n      top: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Username\",\n    name: \"username\",\n    type: \"text\",\n    fullWidth: true,\n    margin: \"dense\",\n    value: formData.username,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    fullWidth: true,\n    margin: \"dense\",\n    value: formData.password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackbarOpen,\n    autoHideDuration: 3000,\n    onClose: () => setSnackbarOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: () => setSnackbarOpen(false),\n    severity: message.type,\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, message.text)));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","IconButton","Snackbar","Alert","CloseIcon","axios","Login","open","onClose","onLogin","formData","setFormData","username","password","message","setMessage","text","type","snackbarOpen","setSnackbarOpen","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","headers","withCredentials","token","role","data","error","_error$response","_error$response$data","console","errorMsg","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","position","right","top","label","fullWidth","margin","onChange","required","color","variant","autoHideDuration","severity","width"],"sources":["C:/Users/Pallavi/Desktop/React/firstapp/src/components/auth/Login.js"],"sourcesContent":["\r\n// import React, { useState } from \"react\";\r\n// import { \r\n//   Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \r\n// } from \"@mui/material\";\r\n// import CloseIcon from \"@mui/icons-material/Close\";\r\n// import axios from \"axios\";\r\n// import { useHistory } from \"react-router-dom\";  // ‚úÖ Correct for React Router v5\r\n\r\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \r\n//   const history = useHistory();  // ‚úÖ Correct usage\r\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\r\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"üîµ Sending Data:\", formData);\r\n  \r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         withCredentials: true,\r\n//       });\r\n  \r\n//       console.log(\"üü¢ Full Response:\", response);\r\n//       console.log(\"üü¢ Response Data:\", JSON.stringify(response.data, null, 2)); // ‚úÖ Log full response data\r\n  \r\n//       const { token, role } = response.data; // ‚úÖ Extract token & role\r\n  \r\n//       // ‚úÖ Only check for role if it's present in API response\r\n//       if (token) {  \r\n//         localStorage.setItem(\"token\", token);\r\n//         localStorage.setItem(\"username\", formData.username);\r\n  \r\n//         if (role) {\r\n//           localStorage.setItem(\"role\", role);\r\n//         }\r\n  \r\n//         onLogin(token);\r\n//         setMessage({ text: \"‚úÖ Login successful! Redirecting...\", type: \"success\" });\r\n//         setSnackbarOpen(true);\r\n  \r\n//         setTimeout(() => {\r\n//           history.push(role?.toLowerCase() === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\");\r\n\r\n//         }, 1500);\r\n//       } else {\r\n//         console.error(\"‚ùå API did not return token. Response Data:\", response.data);\r\n//         setMessage({ text: \"‚ùå Login failed. No token received.\", type: \"error\" });\r\n//         setSnackbarOpen(true);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"üî¥ Full API Error:\", error);\r\n  \r\n//       if (error.response) {\r\n//         console.log(\"üî¥ Error Response Data:\", error.response.data);\r\n//         setMessage({ text: error.response.data?.message || \"‚ùå Invalid username or password\", type: \"error\" });\r\n//       } else if (error.request) {\r\n//         setMessage({ text: \"‚ö†Ô∏è Server not responding. Try again later.\", type: \"error\" });\r\n//       } else {\r\n//         setMessage({ text: \"‚ùå Request failed. Check network.\", type: \"error\" });\r\n//       }\r\n//       setSnackbarOpen(true);\r\n//     }\r\n//   };\r\n  \r\n  \r\n  \r\n    \r\n//   // ‚úÖ Handle Logout Function (Fixing 'handleLogout' not defined error)\r\n//   // const handleLogout = () => {\r\n//   //   localStorage.removeItem(\"token\");\r\n//   //   localStorage.removeItem(\"role\");\r\n//   //   localStorage.removeItem(\"username\");\r\n//   //   history.push(\"/login\");\r\n//   // };\r\n\r\n//   return (\r\n//     <Dialog open={open} onClose={onClose}>\r\n//       <DialogTitle>\r\n//         Login\r\n//         <IconButton\r\n//           aria-label=\"close\"\r\n//           onClick={onClose}\r\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\r\n//         >\r\n//           <CloseIcon />\r\n//         </IconButton>\r\n//       </DialogTitle>\r\n//       <DialogContent>\r\n//         <TextField \r\n//           label=\"Username\" \r\n//           name=\"username\" \r\n//           type=\"text\" \r\n//           fullWidth \r\n//           margin=\"dense\" \r\n//           value={formData.username} \r\n//           onChange={handleChange} \r\n//           required\r\n//         />\r\n//         <TextField \r\n//           label=\"Password\" \r\n//           name=\"password\" \r\n//           type=\"password\" \r\n//           fullWidth \r\n//           margin=\"dense\" \r\n//           value={formData.password} \r\n//           onChange={handleChange} \r\n//           required\r\n//         />\r\n//       </DialogContent>\r\n//       <DialogActions>\r\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\r\n//       </DialogActions>\r\n\r\n//       {/* Snackbar for Feedback */}\r\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\r\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\r\n//           {message.text}\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </Dialog>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n// import React, { useState } from \"react\";\r\n// import {\r\n//   Dialog, DialogTitle, DialogContent, DialogActions,\r\n//   Button, TextField, IconButton, Snackbar, Alert\r\n// } from \"@mui/material\";\r\n// import CloseIcon from \"@mui/icons-material/Close\";\r\n// import axios from \"axios\";\r\n\r\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => {\r\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\r\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!formData.username || !formData.password) {\r\n//       setMessage({ text: \"‚ùå Please enter both username and password\", type: \"error\" });\r\n//       setSnackbarOpen(true);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         withCredentials: true, // important for cookies / CORS handling\r\n//       });\r\n\r\n//       const { token, role } = response.data;\r\n//       if (token) {\r\n//         setMessage({ text: \"‚úÖ Login successful!\", type: \"success\" });\r\n//         setSnackbarOpen(true);\r\n//         onLogin(token, role); // pass token and role to parent component\r\n//       } else {\r\n//         setMessage({ text: \"‚ùå Login failed: No token returned\", type: \"error\" });\r\n//         setSnackbarOpen(true);\r\n//       }\r\n\r\n//     } catch (error) {\r\n//       console.error(\"üî¥ Login API error:\", error);\r\n//       const errorMsg = error?.response?.data?.message || \"‚ùå Invalid credentials or server error.\";\r\n//       setMessage({ text: errorMsg, type: \"error\" });\r\n//       setSnackbarOpen(true);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Dialog open={open} onClose={onClose}>\r\n//       <DialogTitle>\r\n//         Login\r\n//         <IconButton\r\n//           aria-label=\"close\"\r\n//           onClick={onClose}\r\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\r\n//         >\r\n//           <CloseIcon />\r\n//         </IconButton>\r\n//       </DialogTitle>\r\n//       <DialogContent>\r\n//         <TextField\r\n//           label=\"Username\"\r\n//           name=\"username\"\r\n//           type=\"text\"\r\n//           fullWidth\r\n//           margin=\"dense\"\r\n//           value={formData.username}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <TextField\r\n//           label=\"Password\"\r\n//           name=\"password\"\r\n//           type=\"password\"\r\n//           fullWidth\r\n//           margin=\"dense\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </DialogContent>\r\n//       <DialogActions>\r\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\r\n//       </DialogActions>\r\n\r\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\r\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\r\n//           {message.text}\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </Dialog>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Dialog, DialogTitle, DialogContent, DialogActions,\r\n  Button, TextField, IconButton, Snackbar, Alert\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => {\r\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n  const [message, setMessage] = useState({ text: \"\", type: \"error\" });\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.username || !formData.password) {\r\n      setMessage({ text: \"‚ùå Please enter both username and password\", type: \"error\" });\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        withCredentials: true, // important for cookies / CORS handling\r\n      });\r\n\r\n      const { token, role } = response.data;\r\n      if (token) {\r\n        setMessage({ text: \"‚úÖ Login successful!\", type: \"success\" });\r\n        setSnackbarOpen(true);\r\n        onLogin(token, role); // pass token and role to parent component\r\n      } else {\r\n        setMessage({ text: \"‚ùå Login failed: No token returned\", type: \"error\" });\r\n        setSnackbarOpen(true);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"üî¥ Login API error:\", error);\r\n      const errorMsg = error?.response?.data?.message || \"‚ùå Invalid credentials or server error.\";\r\n      setMessage({ text: errorMsg, type: \"error\" });\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose}>\r\n      <DialogTitle>\r\n        Login\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{ position: \"absolute\", right: 8, top: 8 }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n        <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\r\n      </DialogActions>\r\n\r\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\r\n        <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\r\n          {message.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EACjDC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,KAAK,QACzC,eAAe;AACt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","ignoreList":[]},"metadata":{},"sourceType":"module"}