{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pallavi\\\\Desktop\\\\React\\\\firstapp\\\\src\\\\components\\\\auth\\\\Login.js\";\n// import React, { useState } from \"react\";\n// import { \n//   Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \n// } from \"@mui/material\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";  // ✅ Correct for React Router v5\n\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \n//   const history = useHistory();  // ✅ Correct usage\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"🔵 Sending Data:\", formData);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//         withCredentials: true,\n//       });\n\n//       console.log(\"🟢 Full Response:\", response);\n//       console.log(\"🟢 Response Data:\", JSON.stringify(response.data, null, 2)); // ✅ Log full response data\n\n//       const { token, role } = response.data; // ✅ Extract token & role\n\n//       // ✅ Only check for `role` if it's present in API response\n//       if (token) {  \n//         localStorage.setItem(\"token\", token);\n//         localStorage.setItem(\"username\", formData.username);\n\n//         if (role) {\n//           localStorage.setItem(\"role\", role);\n//         }\n\n//         onLogin(token);\n//         setMessage({ text: \"✅ Login successful! Redirecting...\", type: \"success\" });\n//         setSnackbarOpen(true);\n\n//         setTimeout(() => {\n//           history.push(role?.toLowerCase() === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\");\n\n//         }, 1500);\n//       } else {\n//         console.error(\"❌ API did not return token. Response Data:\", response.data);\n//         setMessage({ text: \"❌ Login failed. No token received.\", type: \"error\" });\n//         setSnackbarOpen(true);\n//       }\n//     } catch (error) {\n//       console.error(\"🔴 Full API Error:\", error);\n\n//       if (error.response) {\n//         console.log(\"🔴 Error Response Data:\", error.response.data);\n//         setMessage({ text: error.response.data?.message || \"❌ Invalid username or password\", type: \"error\" });\n//       } else if (error.request) {\n//         setMessage({ text: \"⚠️ Server not responding. Try again later.\", type: \"error\" });\n//       } else {\n//         setMessage({ text: \"❌ Request failed. Check network.\", type: \"error\" });\n//       }\n//       setSnackbarOpen(true);\n//     }\n//   };\n\n//   // ✅ Handle Logout Function (Fixing 'handleLogout' not defined error)\n//   // const handleLogout = () => {\n//   //   localStorage.removeItem(\"token\");\n//   //   localStorage.removeItem(\"role\");\n//   //   localStorage.removeItem(\"username\");\n//   //   history.push(\"/login\");\n//   // };\n\n//   return (\n//     <Dialog open={open} onClose={onClose}>\n//       <DialogTitle>\n//         Login\n//         <IconButton\n//           aria-label=\"close\"\n//           onClick={onClose}\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\n//         >\n//           <CloseIcon />\n//         </IconButton>\n//       </DialogTitle>\n//       <DialogContent>\n//         <TextField \n//           label=\"Username\" \n//           name=\"username\" \n//           type=\"text\" \n//           fullWidth \n//           margin=\"dense\" \n//           value={formData.username} \n//           onChange={handleChange} \n//           required\n//         />\n//         <TextField \n//           label=\"Password\" \n//           name=\"password\" \n//           type=\"password\" \n//           fullWidth \n//           margin=\"dense\" \n//           value={formData.password} \n//           onChange={handleChange} \n//           required\n//         />\n//       </DialogContent>\n//       <DialogActions>\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\n//       </DialogActions>\n\n//       {/* Snackbar for Feedback */}\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\n//           {message.text}\n//         </Alert>\n//       </Snackbar>\n//     </Dialog>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // ✅ Correct for React Router v5\nimport axios from \"axios\";\nconst Login = ({\n  onLogin = () => {}\n}) => {\n  const history = useHistory(); // ✅ React Router v5 History\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      const {\n        token,\n        role\n      } = response.data;\n      if (token) {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", formData.username);\n        localStorage.setItem(\"role\", role); // ✅ Store role immediately\n\n        // ✅ Redirect based on role immediately after login\n        if (role.toLowerCase() === \"artist\") {\n          history.push(\"/artist-dashboard\"); // 🎯 Redirect to artist dashboard\n        } else {\n          history.push(\"/dashboard\"); // 🎯 Redirect to normal dashboard\n        }\n      } else {\n        setMessage(\"❌ Login failed. No token received.\");\n      }\n    } catch (error) {\n      console.error(\"🔴 Login Error:\", error);\n      setMessage(\"❌ Invalid username or password\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, \"Login\"), message && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, message), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    value: formData.username,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: formData.password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useHistory","axios","Login","onLogin","history","formData","setFormData","username","password","message","setMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","headers","withCredentials","token","role","data","localStorage","setItem","toLowerCase","push","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","onChange","required"],"sources":["C:/Users/Pallavi/Desktop/React/firstapp/src/components/auth/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { \r\n//   Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, IconButton, Snackbar, Alert \r\n// } from \"@mui/material\";\r\n// import CloseIcon from \"@mui/icons-material/Close\";\r\n// import axios from \"axios\";\r\n// import { useHistory } from \"react-router-dom\";  // ✅ Correct for React Router v5\r\n\r\n// const Login = ({ open = false, onClose = () => {}, onLogin = () => {} }) => { \r\n//   const history = useHistory();  // ✅ Correct usage\r\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState({ text: \"\", type: \"error\" });\r\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"🔵 Sending Data:\", formData);\r\n  \r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         withCredentials: true,\r\n//       });\r\n  \r\n//       console.log(\"🟢 Full Response:\", response);\r\n//       console.log(\"🟢 Response Data:\", JSON.stringify(response.data, null, 2)); // ✅ Log full response data\r\n  \r\n//       const { token, role } = response.data; // ✅ Extract token & role\r\n  \r\n//       // ✅ Only check for `role` if it's present in API response\r\n//       if (token) {  \r\n//         localStorage.setItem(\"token\", token);\r\n//         localStorage.setItem(\"username\", formData.username);\r\n  \r\n//         if (role) {\r\n//           localStorage.setItem(\"role\", role);\r\n//         }\r\n  \r\n//         onLogin(token);\r\n//         setMessage({ text: \"✅ Login successful! Redirecting...\", type: \"success\" });\r\n//         setSnackbarOpen(true);\r\n  \r\n//         setTimeout(() => {\r\n//           history.push(role?.toLowerCase() === \"artist\" ? \"/artist-dashboard\" : \"/dashboard\");\r\n\r\n//         }, 1500);\r\n//       } else {\r\n//         console.error(\"❌ API did not return token. Response Data:\", response.data);\r\n//         setMessage({ text: \"❌ Login failed. No token received.\", type: \"error\" });\r\n//         setSnackbarOpen(true);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"🔴 Full API Error:\", error);\r\n  \r\n//       if (error.response) {\r\n//         console.log(\"🔴 Error Response Data:\", error.response.data);\r\n//         setMessage({ text: error.response.data?.message || \"❌ Invalid username or password\", type: \"error\" });\r\n//       } else if (error.request) {\r\n//         setMessage({ text: \"⚠️ Server not responding. Try again later.\", type: \"error\" });\r\n//       } else {\r\n//         setMessage({ text: \"❌ Request failed. Check network.\", type: \"error\" });\r\n//       }\r\n//       setSnackbarOpen(true);\r\n//     }\r\n//   };\r\n  \r\n  \r\n  \r\n    \r\n//   // ✅ Handle Logout Function (Fixing 'handleLogout' not defined error)\r\n//   // const handleLogout = () => {\r\n//   //   localStorage.removeItem(\"token\");\r\n//   //   localStorage.removeItem(\"role\");\r\n//   //   localStorage.removeItem(\"username\");\r\n//   //   history.push(\"/login\");\r\n//   // };\r\n\r\n//   return (\r\n//     <Dialog open={open} onClose={onClose}>\r\n//       <DialogTitle>\r\n//         Login\r\n//         <IconButton\r\n//           aria-label=\"close\"\r\n//           onClick={onClose}\r\n//           sx={{ position: \"absolute\", right: 8, top: 8 }}\r\n//         >\r\n//           <CloseIcon />\r\n//         </IconButton>\r\n//       </DialogTitle>\r\n//       <DialogContent>\r\n//         <TextField \r\n//           label=\"Username\" \r\n//           name=\"username\" \r\n//           type=\"text\" \r\n//           fullWidth \r\n//           margin=\"dense\" \r\n//           value={formData.username} \r\n//           onChange={handleChange} \r\n//           required\r\n//         />\r\n//         <TextField \r\n//           label=\"Password\" \r\n//           name=\"password\" \r\n//           type=\"password\" \r\n//           fullWidth \r\n//           margin=\"dense\" \r\n//           value={formData.password} \r\n//           onChange={handleChange} \r\n//           required\r\n//         />\r\n//       </DialogContent>\r\n//       <DialogActions>\r\n//         <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n//         <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">Login</Button>\r\n//       </DialogActions>\r\n\r\n//       {/* Snackbar for Feedback */}\r\n//       <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={() => setSnackbarOpen(false)}>\r\n//         <Alert onClose={() => setSnackbarOpen(false)} severity={message.type} sx={{ width: '100%' }}>\r\n//           {message.text}\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </Dialog>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";  // ✅ Correct for React Router v5\r\nimport axios from \"axios\";\r\n\r\nconst Login = ({ onLogin = () => {} }) => {\r\n  const history = useHistory();  // ✅ React Router v5 History\r\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/api/users/login\", formData, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        withCredentials: true,\r\n      });\r\n\r\n      const { token, role } = response.data;\r\n\r\n      if (token) {\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"username\", formData.username);\r\n        localStorage.setItem(\"role\", role);  // ✅ Store role immediately\r\n\r\n        // ✅ Redirect based on role immediately after login\r\n        if (role.toLowerCase() === \"artist\") {\r\n          history.push(\"/artist-dashboard\");  // 🎯 Redirect to artist dashboard\r\n        } else {\r\n          history.push(\"/dashboard\");  // 🎯 Redirect to normal dashboard\r\n        }\r\n      } else {\r\n        setMessage(\"❌ Login failed. No token received.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"🔴 Login Error:\", error);\r\n      setMessage(\"❌ Invalid username or password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      {message && <p style={{ color: \"red\" }}>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" value={formData.username} onChange={handleChange} required />\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}